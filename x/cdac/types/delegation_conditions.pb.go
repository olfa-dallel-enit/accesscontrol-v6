// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cdac/delegation_conditions.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DelegationConditions struct {
	Id             uint64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Depth          uint64    `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	Validity       *Validity `protobuf:"bytes,3,opt,name=validity,proto3" json:"validity,omitempty"`
	MaxDelegations uint64    `protobuf:"varint,4,opt,name=maxDelegations,proto3" json:"maxDelegations,omitempty"`
	Creator        string    `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *DelegationConditions) Reset()         { *m = DelegationConditions{} }
func (m *DelegationConditions) String() string { return proto.CompactTextString(m) }
func (*DelegationConditions) ProtoMessage()    {}
func (*DelegationConditions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0b1e46d4dba165b, []int{0}
}
func (m *DelegationConditions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DelegationConditions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DelegationConditions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DelegationConditions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegationConditions.Merge(m, src)
}
func (m *DelegationConditions) XXX_Size() int {
	return m.Size()
}
func (m *DelegationConditions) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegationConditions.DiscardUnknown(m)
}

var xxx_messageInfo_DelegationConditions proto.InternalMessageInfo

func (m *DelegationConditions) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DelegationConditions) GetDepth() uint64 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *DelegationConditions) GetValidity() *Validity {
	if m != nil {
		return m.Validity
	}
	return nil
}

func (m *DelegationConditions) GetMaxDelegations() uint64 {
	if m != nil {
		return m.MaxDelegations
	}
	return 0
}

func (m *DelegationConditions) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*DelegationConditions)(nil), "crossdomain.cdac.DelegationConditions")
}

func init() { proto.RegisterFile("cdac/delegation_conditions.proto", fileDescriptor_c0b1e46d4dba165b) }

var fileDescriptor_c0b1e46d4dba165b = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0x4e, 0x49, 0x4c,
	0xd6, 0x4f, 0x49, 0xcd, 0x49, 0x4d, 0x4f, 0x2c, 0xc9, 0xcc, 0xcf, 0x8b, 0x4f, 0xce, 0xcf, 0x4b,
	0xc9, 0x04, 0xb1, 0x8a, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x04, 0x92, 0x8b, 0xf2, 0x8b,
	0x8b, 0x53, 0xf2, 0x73, 0x13, 0x33, 0xf3, 0xf4, 0x40, 0xaa, 0xa5, 0x84, 0xc1, 0x7a, 0xca, 0x12,
	0x73, 0x32, 0x53, 0x32, 0x4b, 0x2a, 0x21, 0xca, 0x94, 0xb6, 0x31, 0x72, 0x89, 0xb8, 0xc0, 0x8d,
	0x71, 0x86, 0x9b, 0x22, 0xc4, 0xc7, 0xc5, 0x94, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x12,
	0xc4, 0x94, 0x99, 0x22, 0x24, 0xc2, 0xc5, 0x9a, 0x92, 0x5a, 0x50, 0x92, 0x21, 0xc1, 0x04, 0x16,
	0x82, 0x70, 0x84, 0xcc, 0xb8, 0x38, 0x60, 0x06, 0x4a, 0x30, 0x2b, 0x30, 0x6a, 0x70, 0x1b, 0x49,
	0xe9, 0xa1, 0x5b, 0xac, 0x17, 0x06, 0x55, 0x11, 0x04, 0x57, 0x2b, 0xa4, 0xc6, 0xc5, 0x97, 0x9b,
	0x58, 0x81, 0xb0, 0xb8, 0x58, 0x82, 0x05, 0x6c, 0x2c, 0x9a, 0xa8, 0x90, 0x04, 0x17, 0x7b, 0x72,
	0x51, 0x6a, 0x62, 0x49, 0x7e, 0x91, 0x04, 0xab, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x8c, 0xeb, 0x64,
	0x74, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0x4e, 0x78, 0x2c,
	0xc7, 0x70, 0xe1, 0xb1, 0x1c, 0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x51, 0x12, 0x48, 0x0e, 0xd0, 0xaf,
	0xd0, 0x07, 0xfb, 0xba, 0xa4, 0xb2, 0x20, 0xb5, 0x38, 0x89, 0x0d, 0xec, 0x67, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x44, 0x58, 0x7e, 0xeb, 0x3e, 0x01, 0x00, 0x00,
}

func (m *DelegationConditions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DelegationConditions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DelegationConditions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintDelegationConditions(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x2a
	}
	if m.MaxDelegations != 0 {
		i = encodeVarintDelegationConditions(dAtA, i, uint64(m.MaxDelegations))
		i--
		dAtA[i] = 0x20
	}
	if m.Validity != nil {
		{
			size, err := m.Validity.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDelegationConditions(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Depth != 0 {
		i = encodeVarintDelegationConditions(dAtA, i, uint64(m.Depth))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintDelegationConditions(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintDelegationConditions(dAtA []byte, offset int, v uint64) int {
	offset -= sovDelegationConditions(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DelegationConditions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDelegationConditions(uint64(m.Id))
	}
	if m.Depth != 0 {
		n += 1 + sovDelegationConditions(uint64(m.Depth))
	}
	if m.Validity != nil {
		l = m.Validity.Size()
		n += 1 + l + sovDelegationConditions(uint64(l))
	}
	if m.MaxDelegations != 0 {
		n += 1 + sovDelegationConditions(uint64(m.MaxDelegations))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovDelegationConditions(uint64(l))
	}
	return n
}

func sovDelegationConditions(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDelegationConditions(x uint64) (n int) {
	return sovDelegationConditions(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DelegationConditions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDelegationConditions
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DelegationConditions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DelegationConditions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationConditions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depth", wireType)
			}
			m.Depth = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationConditions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Depth |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Validity", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationConditions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDelegationConditions
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationConditions
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Validity == nil {
				m.Validity = &Validity{}
			}
			if err := m.Validity.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDelegations", wireType)
			}
			m.MaxDelegations = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationConditions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDelegations |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationConditions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegationConditions
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationConditions
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDelegationConditions(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDelegationConditions
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDelegationConditions(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDelegationConditions
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegationConditions
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegationConditions
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDelegationConditions
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDelegationConditions
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDelegationConditions
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDelegationConditions        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDelegationConditions          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDelegationConditions = fmt.Errorf("proto: unexpected end of group")
)
