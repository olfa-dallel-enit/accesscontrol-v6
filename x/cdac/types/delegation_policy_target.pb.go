// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cdac/delegation_policy_target.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DelegationPolicyTarget struct {
	Id             uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DelegatorList  []string `protobuf:"bytes,2,rep,name=delegatorList,proto3" json:"delegatorList,omitempty"`
	PermissionList []string `protobuf:"bytes,3,rep,name=permissionList,proto3" json:"permissionList,omitempty"`
	Action         string   `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Creator        string   `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *DelegationPolicyTarget) Reset()         { *m = DelegationPolicyTarget{} }
func (m *DelegationPolicyTarget) String() string { return proto.CompactTextString(m) }
func (*DelegationPolicyTarget) ProtoMessage()    {}
func (*DelegationPolicyTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_e664a5b341d487ad, []int{0}
}
func (m *DelegationPolicyTarget) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DelegationPolicyTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DelegationPolicyTarget.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DelegationPolicyTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegationPolicyTarget.Merge(m, src)
}
func (m *DelegationPolicyTarget) XXX_Size() int {
	return m.Size()
}
func (m *DelegationPolicyTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegationPolicyTarget.DiscardUnknown(m)
}

var xxx_messageInfo_DelegationPolicyTarget proto.InternalMessageInfo

func (m *DelegationPolicyTarget) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DelegationPolicyTarget) GetDelegatorList() []string {
	if m != nil {
		return m.DelegatorList
	}
	return nil
}

func (m *DelegationPolicyTarget) GetPermissionList() []string {
	if m != nil {
		return m.PermissionList
	}
	return nil
}

func (m *DelegationPolicyTarget) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DelegationPolicyTarget) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*DelegationPolicyTarget)(nil), "crossdomain.cdac.DelegationPolicyTarget")
}

func init() {
	proto.RegisterFile("cdac/delegation_policy_target.proto", fileDescriptor_e664a5b341d487ad)
}

var fileDescriptor_e664a5b341d487ad = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4e, 0x4e, 0x49, 0x4c,
	0xd6, 0x4f, 0x49, 0xcd, 0x49, 0x4d, 0x4f, 0x2c, 0xc9, 0xcc, 0xcf, 0x8b, 0x2f, 0xc8, 0xcf, 0xc9,
	0x4c, 0xae, 0x8c, 0x2f, 0x49, 0x2c, 0x4a, 0x4f, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x12, 0x48, 0x2e, 0xca, 0x2f, 0x2e, 0x4e, 0xc9, 0xcf, 0x4d, 0xcc, 0xcc, 0xd3, 0x03, 0x69, 0x50,
	0x5a, 0xc1, 0xc8, 0x25, 0xe6, 0x02, 0xd7, 0x14, 0x00, 0xd6, 0x13, 0x02, 0xd6, 0x22, 0xc4, 0xc7,
	0xc5, 0x94, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x12, 0xc4, 0x94, 0x99, 0x22, 0xa4, 0xc2,
	0xc5, 0x0b, 0x35, 0x3e, 0xbf, 0xc8, 0x27, 0xb3, 0xb8, 0x44, 0x82, 0x49, 0x81, 0x59, 0x83, 0x33,
	0x08, 0x55, 0x50, 0x48, 0x8d, 0x8b, 0xaf, 0x20, 0xb5, 0x28, 0x37, 0xb3, 0xb8, 0x38, 0x33, 0x3f,
	0x0f, 0xac, 0x8c, 0x19, 0xac, 0x0c, 0x4d, 0x54, 0x48, 0x8c, 0x8b, 0x2d, 0x31, 0x19, 0x64, 0xa7,
	0x04, 0x8b, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x94, 0x27, 0x24, 0xc1, 0xc5, 0x9e, 0x5c, 0x94, 0x0a,
	0x32, 0x4e, 0x82, 0x15, 0x2c, 0x01, 0xe3, 0x3a, 0x19, 0x9d, 0x78, 0x24, 0xc7, 0x78, 0xe1, 0x91,
	0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x5c, 0x78, 0x2c, 0xc7, 0x70, 0xe3,
	0xb1, 0x1c, 0x43, 0x94, 0x04, 0x92, 0xb7, 0xf4, 0x2b, 0xf4, 0xc1, 0x21, 0x51, 0x52, 0x59, 0x90,
	0x5a, 0x9c, 0xc4, 0x06, 0xf6, 0xb7, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x3b, 0x92, 0x07,
	0x1e, 0x01, 0x00, 0x00,
}

func (m *DelegationPolicyTarget) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DelegationPolicyTarget) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DelegationPolicyTarget) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintDelegationPolicyTarget(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Action) > 0 {
		i -= len(m.Action)
		copy(dAtA[i:], m.Action)
		i = encodeVarintDelegationPolicyTarget(dAtA, i, uint64(len(m.Action)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PermissionList) > 0 {
		for iNdEx := len(m.PermissionList) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PermissionList[iNdEx])
			copy(dAtA[i:], m.PermissionList[iNdEx])
			i = encodeVarintDelegationPolicyTarget(dAtA, i, uint64(len(m.PermissionList[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.DelegatorList) > 0 {
		for iNdEx := len(m.DelegatorList) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.DelegatorList[iNdEx])
			copy(dAtA[i:], m.DelegatorList[iNdEx])
			i = encodeVarintDelegationPolicyTarget(dAtA, i, uint64(len(m.DelegatorList[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Id != 0 {
		i = encodeVarintDelegationPolicyTarget(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintDelegationPolicyTarget(dAtA []byte, offset int, v uint64) int {
	offset -= sovDelegationPolicyTarget(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DelegationPolicyTarget) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDelegationPolicyTarget(uint64(m.Id))
	}
	if len(m.DelegatorList) > 0 {
		for _, s := range m.DelegatorList {
			l = len(s)
			n += 1 + l + sovDelegationPolicyTarget(uint64(l))
		}
	}
	if len(m.PermissionList) > 0 {
		for _, s := range m.PermissionList {
			l = len(s)
			n += 1 + l + sovDelegationPolicyTarget(uint64(l))
		}
	}
	l = len(m.Action)
	if l > 0 {
		n += 1 + l + sovDelegationPolicyTarget(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovDelegationPolicyTarget(uint64(l))
	}
	return n
}

func sovDelegationPolicyTarget(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDelegationPolicyTarget(x uint64) (n int) {
	return sovDelegationPolicyTarget(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DelegationPolicyTarget) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDelegationPolicyTarget
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DelegationPolicyTarget: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DelegationPolicyTarget: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationPolicyTarget
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatorList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationPolicyTarget
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegationPolicyTarget
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationPolicyTarget
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatorList = append(m.DelegatorList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PermissionList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationPolicyTarget
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegationPolicyTarget
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationPolicyTarget
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PermissionList = append(m.PermissionList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationPolicyTarget
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegationPolicyTarget
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationPolicyTarget
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Action = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegationPolicyTarget
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegationPolicyTarget
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegationPolicyTarget
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDelegationPolicyTarget(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDelegationPolicyTarget
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDelegationPolicyTarget(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDelegationPolicyTarget
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegationPolicyTarget
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegationPolicyTarget
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDelegationPolicyTarget
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDelegationPolicyTarget
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDelegationPolicyTarget
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDelegationPolicyTarget        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDelegationPolicyTarget          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDelegationPolicyTarget = fmt.Errorf("proto: unexpected end of group")
)
