// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cdac/packet.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CdacPacketData struct {
	// Types that are valid to be assigned to Packet:
	//	*CdacPacketData_NoData
	//	*CdacPacketData_ForwardCooperationDataPacket
	//	*CdacPacketData_EstablishCooperationPacket
	//	*CdacPacketData_AuthenticateDomainPacket
	Packet isCdacPacketData_Packet `protobuf_oneof:"packet"`
}

func (m *CdacPacketData) Reset()         { *m = CdacPacketData{} }
func (m *CdacPacketData) String() string { return proto.CompactTextString(m) }
func (*CdacPacketData) ProtoMessage()    {}
func (*CdacPacketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7821588041dde76, []int{0}
}
func (m *CdacPacketData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CdacPacketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CdacPacketData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CdacPacketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CdacPacketData.Merge(m, src)
}
func (m *CdacPacketData) XXX_Size() int {
	return m.Size()
}
func (m *CdacPacketData) XXX_DiscardUnknown() {
	xxx_messageInfo_CdacPacketData.DiscardUnknown(m)
}

var xxx_messageInfo_CdacPacketData proto.InternalMessageInfo

type isCdacPacketData_Packet interface {
	isCdacPacketData_Packet()
	MarshalTo([]byte) (int, error)
	Size() int
}

type CdacPacketData_NoData struct {
	NoData *NoData `protobuf:"bytes,1,opt,name=noData,proto3,oneof" json:"noData,omitempty"`
}
type CdacPacketData_ForwardCooperationDataPacket struct {
	ForwardCooperationDataPacket *ForwardCooperationDataPacketData `protobuf:"bytes,4,opt,name=forwardCooperationDataPacket,proto3,oneof" json:"forwardCooperationDataPacket,omitempty"`
}
type CdacPacketData_EstablishCooperationPacket struct {
	EstablishCooperationPacket *EstablishCooperationPacketData `protobuf:"bytes,3,opt,name=establishCooperationPacket,proto3,oneof" json:"establishCooperationPacket,omitempty"`
}
type CdacPacketData_AuthenticateDomainPacket struct {
	AuthenticateDomainPacket *AuthenticateDomainPacketData `protobuf:"bytes,2,opt,name=authenticateDomainPacket,proto3,oneof" json:"authenticateDomainPacket,omitempty"`
}

func (*CdacPacketData_NoData) isCdacPacketData_Packet()                       {}
func (*CdacPacketData_ForwardCooperationDataPacket) isCdacPacketData_Packet() {}
func (*CdacPacketData_EstablishCooperationPacket) isCdacPacketData_Packet()   {}
func (*CdacPacketData_AuthenticateDomainPacket) isCdacPacketData_Packet()     {}

func (m *CdacPacketData) GetPacket() isCdacPacketData_Packet {
	if m != nil {
		return m.Packet
	}
	return nil
}

func (m *CdacPacketData) GetNoData() *NoData {
	if x, ok := m.GetPacket().(*CdacPacketData_NoData); ok {
		return x.NoData
	}
	return nil
}

func (m *CdacPacketData) GetForwardCooperationDataPacket() *ForwardCooperationDataPacketData {
	if x, ok := m.GetPacket().(*CdacPacketData_ForwardCooperationDataPacket); ok {
		return x.ForwardCooperationDataPacket
	}
	return nil
}

func (m *CdacPacketData) GetEstablishCooperationPacket() *EstablishCooperationPacketData {
	if x, ok := m.GetPacket().(*CdacPacketData_EstablishCooperationPacket); ok {
		return x.EstablishCooperationPacket
	}
	return nil
}

func (m *CdacPacketData) GetAuthenticateDomainPacket() *AuthenticateDomainPacketData {
	if x, ok := m.GetPacket().(*CdacPacketData_AuthenticateDomainPacket); ok {
		return x.AuthenticateDomainPacket
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CdacPacketData) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CdacPacketData_NoData)(nil),
		(*CdacPacketData_ForwardCooperationDataPacket)(nil),
		(*CdacPacketData_EstablishCooperationPacket)(nil),
		(*CdacPacketData_AuthenticateDomainPacket)(nil),
	}
}

type NoData struct {
}

func (m *NoData) Reset()         { *m = NoData{} }
func (m *NoData) String() string { return proto.CompactTextString(m) }
func (*NoData) ProtoMessage()    {}
func (*NoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7821588041dde76, []int{1}
}
func (m *NoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoData.Merge(m, src)
}
func (m *NoData) XXX_Size() int {
	return m.Size()
}
func (m *NoData) XXX_DiscardUnknown() {
	xxx_messageInfo_NoData.DiscardUnknown(m)
}

var xxx_messageInfo_NoData proto.InternalMessageInfo

// AuthenticateDomainPacketData defines a struct for the packet payload
type AuthenticateDomainPacketData struct {
}

func (m *AuthenticateDomainPacketData) Reset()         { *m = AuthenticateDomainPacketData{} }
func (m *AuthenticateDomainPacketData) String() string { return proto.CompactTextString(m) }
func (*AuthenticateDomainPacketData) ProtoMessage()    {}
func (*AuthenticateDomainPacketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7821588041dde76, []int{2}
}
func (m *AuthenticateDomainPacketData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthenticateDomainPacketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthenticateDomainPacketData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthenticateDomainPacketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateDomainPacketData.Merge(m, src)
}
func (m *AuthenticateDomainPacketData) XXX_Size() int {
	return m.Size()
}
func (m *AuthenticateDomainPacketData) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateDomainPacketData.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateDomainPacketData proto.InternalMessageInfo

// AuthenticateDomainPacketAck defines a struct for the packet acknowledgment
type AuthenticateDomainPacketAck struct {
}

func (m *AuthenticateDomainPacketAck) Reset()         { *m = AuthenticateDomainPacketAck{} }
func (m *AuthenticateDomainPacketAck) String() string { return proto.CompactTextString(m) }
func (*AuthenticateDomainPacketAck) ProtoMessage()    {}
func (*AuthenticateDomainPacketAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7821588041dde76, []int{3}
}
func (m *AuthenticateDomainPacketAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthenticateDomainPacketAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthenticateDomainPacketAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthenticateDomainPacketAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateDomainPacketAck.Merge(m, src)
}
func (m *AuthenticateDomainPacketAck) XXX_Size() int {
	return m.Size()
}
func (m *AuthenticateDomainPacketAck) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateDomainPacketAck.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateDomainPacketAck proto.InternalMessageInfo

// EstablishCooperationPacketData defines a struct for the packet payload
type EstablishCooperationPacketData struct {
	NotBefore string `protobuf:"bytes,1,opt,name=notBefore,proto3" json:"notBefore,omitempty"`
	NotAfter  string `protobuf:"bytes,2,opt,name=notAfter,proto3" json:"notAfter,omitempty"`
	Interest  string `protobuf:"bytes,3,opt,name=interest,proto3" json:"interest,omitempty"`
	Cost      string `protobuf:"bytes,4,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (m *EstablishCooperationPacketData) Reset()         { *m = EstablishCooperationPacketData{} }
func (m *EstablishCooperationPacketData) String() string { return proto.CompactTextString(m) }
func (*EstablishCooperationPacketData) ProtoMessage()    {}
func (*EstablishCooperationPacketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7821588041dde76, []int{4}
}
func (m *EstablishCooperationPacketData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EstablishCooperationPacketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EstablishCooperationPacketData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EstablishCooperationPacketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstablishCooperationPacketData.Merge(m, src)
}
func (m *EstablishCooperationPacketData) XXX_Size() int {
	return m.Size()
}
func (m *EstablishCooperationPacketData) XXX_DiscardUnknown() {
	xxx_messageInfo_EstablishCooperationPacketData.DiscardUnknown(m)
}

var xxx_messageInfo_EstablishCooperationPacketData proto.InternalMessageInfo

func (m *EstablishCooperationPacketData) GetNotBefore() string {
	if m != nil {
		return m.NotBefore
	}
	return ""
}

func (m *EstablishCooperationPacketData) GetNotAfter() string {
	if m != nil {
		return m.NotAfter
	}
	return ""
}

func (m *EstablishCooperationPacketData) GetInterest() string {
	if m != nil {
		return m.Interest
	}
	return ""
}

func (m *EstablishCooperationPacketData) GetCost() string {
	if m != nil {
		return m.Cost
	}
	return ""
}

// EstablishCooperationPacketAck defines a struct for the packet acknowledgment
type EstablishCooperationPacketAck struct {
}

func (m *EstablishCooperationPacketAck) Reset()         { *m = EstablishCooperationPacketAck{} }
func (m *EstablishCooperationPacketAck) String() string { return proto.CompactTextString(m) }
func (*EstablishCooperationPacketAck) ProtoMessage()    {}
func (*EstablishCooperationPacketAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7821588041dde76, []int{5}
}
func (m *EstablishCooperationPacketAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EstablishCooperationPacketAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EstablishCooperationPacketAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EstablishCooperationPacketAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EstablishCooperationPacketAck.Merge(m, src)
}
func (m *EstablishCooperationPacketAck) XXX_Size() int {
	return m.Size()
}
func (m *EstablishCooperationPacketAck) XXX_DiscardUnknown() {
	xxx_messageInfo_EstablishCooperationPacketAck.DiscardUnknown(m)
}

var xxx_messageInfo_EstablishCooperationPacketAck proto.InternalMessageInfo

// ForwardCooperationDataPacketData defines a struct for the packet payload
type ForwardCooperationDataPacketData struct {
}

func (m *ForwardCooperationDataPacketData) Reset()         { *m = ForwardCooperationDataPacketData{} }
func (m *ForwardCooperationDataPacketData) String() string { return proto.CompactTextString(m) }
func (*ForwardCooperationDataPacketData) ProtoMessage()    {}
func (*ForwardCooperationDataPacketData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7821588041dde76, []int{6}
}
func (m *ForwardCooperationDataPacketData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ForwardCooperationDataPacketData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ForwardCooperationDataPacketData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ForwardCooperationDataPacketData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardCooperationDataPacketData.Merge(m, src)
}
func (m *ForwardCooperationDataPacketData) XXX_Size() int {
	return m.Size()
}
func (m *ForwardCooperationDataPacketData) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardCooperationDataPacketData.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardCooperationDataPacketData proto.InternalMessageInfo

// ForwardCooperationDataPacketAck defines a struct for the packet acknowledgment
type ForwardCooperationDataPacketAck struct {
}

func (m *ForwardCooperationDataPacketAck) Reset()         { *m = ForwardCooperationDataPacketAck{} }
func (m *ForwardCooperationDataPacketAck) String() string { return proto.CompactTextString(m) }
func (*ForwardCooperationDataPacketAck) ProtoMessage()    {}
func (*ForwardCooperationDataPacketAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7821588041dde76, []int{7}
}
func (m *ForwardCooperationDataPacketAck) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ForwardCooperationDataPacketAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ForwardCooperationDataPacketAck.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ForwardCooperationDataPacketAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardCooperationDataPacketAck.Merge(m, src)
}
func (m *ForwardCooperationDataPacketAck) XXX_Size() int {
	return m.Size()
}
func (m *ForwardCooperationDataPacketAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardCooperationDataPacketAck.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardCooperationDataPacketAck proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CdacPacketData)(nil), "crossdomain.cdac.CdacPacketData")
	proto.RegisterType((*NoData)(nil), "crossdomain.cdac.NoData")
	proto.RegisterType((*AuthenticateDomainPacketData)(nil), "crossdomain.cdac.AuthenticateDomainPacketData")
	proto.RegisterType((*AuthenticateDomainPacketAck)(nil), "crossdomain.cdac.AuthenticateDomainPacketAck")
	proto.RegisterType((*EstablishCooperationPacketData)(nil), "crossdomain.cdac.EstablishCooperationPacketData")
	proto.RegisterType((*EstablishCooperationPacketAck)(nil), "crossdomain.cdac.EstablishCooperationPacketAck")
	proto.RegisterType((*ForwardCooperationDataPacketData)(nil), "crossdomain.cdac.ForwardCooperationDataPacketData")
	proto.RegisterType((*ForwardCooperationDataPacketAck)(nil), "crossdomain.cdac.ForwardCooperationDataPacketAck")
}

func init() { proto.RegisterFile("cdac/packet.proto", fileDescriptor_d7821588041dde76) }

var fileDescriptor_d7821588041dde76 = []byte{
	// 368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xb1, 0x4e, 0xeb, 0x30,
	0x14, 0x86, 0x93, 0xdb, 0x2a, 0x6a, 0xce, 0x95, 0xae, 0x2e, 0x9e, 0xa2, 0xd2, 0xba, 0xc5, 0x13,
	0x53, 0x8a, 0xc2, 0x13, 0xa4, 0x2d, 0x88, 0x09, 0xa1, 0x8c, 0x6c, 0xae, 0xe3, 0xaa, 0x51, 0x8b,
	0x1d, 0xd9, 0x46, 0x94, 0x57, 0x60, 0xe2, 0x39, 0x78, 0x12, 0xc6, 0x8e, 0x8c, 0xa8, 0x7d, 0x11,
	0x14, 0x27, 0x2a, 0x15, 0x55, 0xc2, 0x66, 0xe7, 0x3f, 0xff, 0xff, 0x39, 0xc7, 0xc7, 0x70, 0xc2,
	0x52, 0xca, 0x46, 0x39, 0x65, 0x4b, 0x6e, 0xc2, 0x5c, 0x49, 0x23, 0xd1, 0x7f, 0xa6, 0xa4, 0xd6,
	0xa9, 0x7c, 0xa0, 0x99, 0x08, 0x0b, 0x99, 0xbc, 0xb5, 0xe0, 0xdf, 0x24, 0xa5, 0xec, 0xce, 0x96,
	0x4d, 0xa9, 0xa1, 0x28, 0x02, 0x4f, 0xc8, 0x62, 0x15, 0xb8, 0x43, 0xf7, 0xfc, 0x6f, 0x14, 0x84,
	0x3f, 0x5d, 0xe1, 0xad, 0xd5, 0x6f, 0x9c, 0xa4, 0xaa, 0x44, 0x6b, 0xe8, 0xcd, 0xa5, 0x7a, 0xa2,
	0x2a, 0x9d, 0x48, 0x99, 0x73, 0x45, 0x4d, 0x26, 0x45, 0xa1, 0x94, 0xb9, 0x41, 0xdb, 0x26, 0x45,
	0xc7, 0x49, 0xd7, 0x0d, 0xae, 0x8a, 0xd1, 0x98, 0x8c, 0x14, 0x74, 0xb9, 0x36, 0x74, 0xb6, 0xca,
	0xf4, 0xe2, 0xa0, 0xa2, 0xe2, 0xb6, 0x2c, 0xf7, 0xe2, 0x98, 0x7b, 0x55, 0xeb, 0xa9, 0xa8, 0x0d,
	0xa9, 0x68, 0x05, 0x01, 0x7d, 0x34, 0x0b, 0x2e, 0x4c, 0xc6, 0xa8, 0xe1, 0x53, 0x9b, 0x5b, 0x11,
	0xff, 0x58, 0x62, 0x78, 0x4c, 0x8c, 0x6b, 0x1c, 0x15, 0xaf, 0x36, 0x71, 0xdc, 0x01, 0xaf, 0xbc,
	0x44, 0xd2, 0x01, 0xaf, 0xec, 0x3c, 0xc1, 0xd0, 0x6b, 0xca, 0x23, 0x7d, 0x38, 0xad, 0xd3, 0x63,
	0xb6, 0x24, 0x2f, 0x2e, 0xe0, 0xe6, 0x0e, 0xa0, 0x1e, 0xf8, 0x42, 0x9a, 0x31, 0x9f, 0x4b, 0xc5,
	0xed, 0x20, 0xf8, 0xc9, 0xf7, 0x07, 0xd4, 0x85, 0x8e, 0x90, 0x26, 0x9e, 0x1b, 0xae, 0xec, 0x1f,
	0xfb, 0xc9, 0x7e, 0x5f, 0x68, 0x99, 0x30, 0x5c, 0x71, 0x5d, 0xf6, 0xdf, 0x4f, 0xf6, 0x7b, 0x84,
	0xa0, 0xcd, 0xa4, 0x2e, 0xe7, 0xc1, 0x4f, 0xec, 0x9a, 0x0c, 0xa0, 0x5f, 0x7f, 0x96, 0xe2, 0xb4,
	0x04, 0x86, 0xbf, 0x8d, 0x09, 0x39, 0x83, 0x41, 0x53, 0x4d, 0xcc, 0x96, 0xe3, 0xe8, 0x7d, 0x8b,
	0xdd, 0xcd, 0x16, 0xbb, 0x9f, 0x5b, 0xec, 0xbe, 0xee, 0xb0, 0xb3, 0xd9, 0x61, 0xe7, 0x63, 0x87,
	0x9d, 0xfb, 0xe0, 0xe0, 0xb2, 0x46, 0xeb, 0x91, 0x7d, 0x37, 0xe6, 0x39, 0xe7, 0x7a, 0xe6, 0xd9,
	0x77, 0x73, 0xf9, 0x15, 0x00, 0x00, 0xff, 0xff, 0xca, 0x66, 0x75, 0xeb, 0x4c, 0x03, 0x00, 0x00,
}

func (m *CdacPacketData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CdacPacketData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CdacPacketData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Packet != nil {
		{
			size := m.Packet.Size()
			i -= size
			if _, err := m.Packet.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *CdacPacketData_NoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CdacPacketData_NoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoData != nil {
		{
			size, err := m.NoData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPacket(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *CdacPacketData_AuthenticateDomainPacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CdacPacketData_AuthenticateDomainPacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.AuthenticateDomainPacket != nil {
		{
			size, err := m.AuthenticateDomainPacket.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPacket(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *CdacPacketData_EstablishCooperationPacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CdacPacketData_EstablishCooperationPacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.EstablishCooperationPacket != nil {
		{
			size, err := m.EstablishCooperationPacket.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPacket(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *CdacPacketData_ForwardCooperationDataPacket) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CdacPacketData_ForwardCooperationDataPacket) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ForwardCooperationDataPacket != nil {
		{
			size, err := m.ForwardCooperationDataPacket.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPacket(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *NoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *AuthenticateDomainPacketData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthenticateDomainPacketData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthenticateDomainPacketData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *AuthenticateDomainPacketAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthenticateDomainPacketAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthenticateDomainPacketAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *EstablishCooperationPacketData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EstablishCooperationPacketData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EstablishCooperationPacketData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Cost) > 0 {
		i -= len(m.Cost)
		copy(dAtA[i:], m.Cost)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.Cost)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Interest) > 0 {
		i -= len(m.Interest)
		copy(dAtA[i:], m.Interest)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.Interest)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NotAfter) > 0 {
		i -= len(m.NotAfter)
		copy(dAtA[i:], m.NotAfter)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.NotAfter)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.NotBefore) > 0 {
		i -= len(m.NotBefore)
		copy(dAtA[i:], m.NotBefore)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.NotBefore)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EstablishCooperationPacketAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EstablishCooperationPacketAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EstablishCooperationPacketAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ForwardCooperationDataPacketData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ForwardCooperationDataPacketData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ForwardCooperationDataPacketData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ForwardCooperationDataPacketAck) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ForwardCooperationDataPacketAck) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ForwardCooperationDataPacketAck) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintPacket(dAtA []byte, offset int, v uint64) int {
	offset -= sovPacket(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CdacPacketData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Packet != nil {
		n += m.Packet.Size()
	}
	return n
}

func (m *CdacPacketData_NoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoData != nil {
		l = m.NoData.Size()
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}
func (m *CdacPacketData_AuthenticateDomainPacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuthenticateDomainPacket != nil {
		l = m.AuthenticateDomainPacket.Size()
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}
func (m *CdacPacketData_EstablishCooperationPacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EstablishCooperationPacket != nil {
		l = m.EstablishCooperationPacket.Size()
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}
func (m *CdacPacketData_ForwardCooperationDataPacket) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ForwardCooperationDataPacket != nil {
		l = m.ForwardCooperationDataPacket.Size()
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}
func (m *NoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *AuthenticateDomainPacketData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *AuthenticateDomainPacketAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *EstablishCooperationPacketData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NotBefore)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	l = len(m.NotAfter)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	l = len(m.Interest)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	l = len(m.Cost)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	return n
}

func (m *EstablishCooperationPacketAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ForwardCooperationDataPacketData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ForwardCooperationDataPacketAck) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovPacket(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPacket(x uint64) (n int) {
	return sovPacket(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CdacPacketData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CdacPacketData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CdacPacketData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &NoData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Packet = &CdacPacketData_NoData{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthenticateDomainPacket", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &AuthenticateDomainPacketData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Packet = &CdacPacketData_AuthenticateDomainPacket{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EstablishCooperationPacket", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &EstablishCooperationPacketData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Packet = &CdacPacketData_EstablishCooperationPacket{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardCooperationDataPacket", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ForwardCooperationDataPacketData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Packet = &CdacPacketData_ForwardCooperationDataPacket{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthenticateDomainPacketData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthenticateDomainPacketData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthenticateDomainPacketData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthenticateDomainPacketAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthenticateDomainPacketAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthenticateDomainPacketAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EstablishCooperationPacketData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EstablishCooperationPacketData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EstablishCooperationPacketData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotBefore", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NotBefore = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotAfter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NotAfter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interest", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Interest = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cost", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cost = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EstablishCooperationPacketAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EstablishCooperationPacketAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EstablishCooperationPacketAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ForwardCooperationDataPacketData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ForwardCooperationDataPacketData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ForwardCooperationDataPacketData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ForwardCooperationDataPacketAck) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ForwardCooperationDataPacketAck: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ForwardCooperationDataPacketAck: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPacket(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPacket
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPacket
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPacket
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPacket        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPacket          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPacket = fmt.Errorf("proto: unexpected end of group")
)
