// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cdac/domain_cooperation.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DomainCooperation struct {
	Id                uint64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Label             string    `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	CooperationType   string    `protobuf:"bytes,3,opt,name=cooperationType,proto3" json:"cooperationType,omitempty"`
	SourceDomain      *Domain   `protobuf:"bytes,4,opt,name=sourceDomain,proto3" json:"sourceDomain,omitempty"`
	RemoteDomain      *Domain   `protobuf:"bytes,5,opt,name=remoteDomain,proto3" json:"remoteDomain,omitempty"`
	Validity          *Validity `protobuf:"bytes,6,opt,name=validity,proto3" json:"validity,omitempty"`
	Interest          string    `protobuf:"bytes,7,opt,name=interest,proto3" json:"interest,omitempty"`
	Cost              uint64    `protobuf:"varint,8,opt,name=cost,proto3" json:"cost,omitempty"`
	CreationDate      string    `protobuf:"bytes,9,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	CreationTimestamp string    `protobuf:"bytes,10,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	UpdateDate        string    `protobuf:"bytes,11,opt,name=updateDate,proto3" json:"updateDate,omitempty"`
	UpdateTimestamp   string    `protobuf:"bytes,12,opt,name=updateTimestamp,proto3" json:"updateTimestamp,omitempty"`
	Creator           string    `protobuf:"bytes,13,opt,name=creator,proto3" json:"creator,omitempty"`
	Status            string    `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *DomainCooperation) Reset()         { *m = DomainCooperation{} }
func (m *DomainCooperation) String() string { return proto.CompactTextString(m) }
func (*DomainCooperation) ProtoMessage()    {}
func (*DomainCooperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b2f2065b36850b6, []int{0}
}
func (m *DomainCooperation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DomainCooperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DomainCooperation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DomainCooperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainCooperation.Merge(m, src)
}
func (m *DomainCooperation) XXX_Size() int {
	return m.Size()
}
func (m *DomainCooperation) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainCooperation.DiscardUnknown(m)
}

var xxx_messageInfo_DomainCooperation proto.InternalMessageInfo

func (m *DomainCooperation) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DomainCooperation) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *DomainCooperation) GetCooperationType() string {
	if m != nil {
		return m.CooperationType
	}
	return ""
}

func (m *DomainCooperation) GetSourceDomain() *Domain {
	if m != nil {
		return m.SourceDomain
	}
	return nil
}

func (m *DomainCooperation) GetRemoteDomain() *Domain {
	if m != nil {
		return m.RemoteDomain
	}
	return nil
}

func (m *DomainCooperation) GetValidity() *Validity {
	if m != nil {
		return m.Validity
	}
	return nil
}

func (m *DomainCooperation) GetInterest() string {
	if m != nil {
		return m.Interest
	}
	return ""
}

func (m *DomainCooperation) GetCost() uint64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *DomainCooperation) GetCreationDate() string {
	if m != nil {
		return m.CreationDate
	}
	return ""
}

func (m *DomainCooperation) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *DomainCooperation) GetUpdateDate() string {
	if m != nil {
		return m.UpdateDate
	}
	return ""
}

func (m *DomainCooperation) GetUpdateTimestamp() string {
	if m != nil {
		return m.UpdateTimestamp
	}
	return ""
}

func (m *DomainCooperation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *DomainCooperation) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*DomainCooperation)(nil), "crossdomain.cdac.DomainCooperation")
}

func init() { proto.RegisterFile("cdac/domain_cooperation.proto", fileDescriptor_3b2f2065b36850b6) }

var fileDescriptor_3b2f2065b36850b6 = []byte{
	// 368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xbf, 0x6e, 0xea, 0x30,
	0x14, 0xc6, 0x09, 0x37, 0xfc, 0x3b, 0x70, 0xb9, 0x17, 0xb7, 0xaa, 0xac, 0x48, 0x8d, 0x10, 0x53,
	0x86, 0x2a, 0x48, 0x54, 0xea, 0xd4, 0xa9, 0xe5, 0x09, 0x22, 0xd4, 0xa1, 0x4b, 0x65, 0x1c, 0x0f,
	0x96, 0x08, 0x8e, 0x6c, 0x53, 0x95, 0xb7, 0xe8, 0xd2, 0x77, 0xea, 0xc8, 0xd8, 0xb1, 0x82, 0x17,
	0xa9, 0x38, 0x26, 0x10, 0x60, 0xe8, 0x96, 0xef, 0xfb, 0x7e, 0xdf, 0x89, 0x7d, 0x64, 0xb8, 0xe6,
	0x29, 0xe3, 0xc3, 0x54, 0x65, 0x4c, 0xce, 0x5f, 0xb8, 0x52, 0xb9, 0xd0, 0xcc, 0x4a, 0x35, 0x8f,
	0x73, 0xad, 0xac, 0x22, 0xff, 0xb9, 0x56, 0xc6, 0xb8, 0x38, 0xde, 0xa2, 0x41, 0xaf, 0x54, 0x70,
	0x50, 0x70, 0x81, 0xd6, 0x2b, 0x9b, 0xc9, 0x54, 0xda, 0xa5, 0x33, 0x07, 0x1f, 0x3e, 0xf4, 0xc6,
	0x48, 0x3d, 0x1e, 0xa6, 0x92, 0x2e, 0x54, 0x65, 0x4a, 0xbd, 0xbe, 0x17, 0xf9, 0x49, 0x55, 0xa6,
	0xe4, 0x12, 0x6a, 0x33, 0x36, 0x15, 0x33, 0x5a, 0xed, 0x7b, 0x51, 0x2b, 0x71, 0x82, 0x44, 0xf0,
	0xaf, 0x74, 0x94, 0xc9, 0x32, 0x17, 0xf4, 0x0f, 0xe6, 0xa7, 0x36, 0xb9, 0x87, 0x8e, 0x51, 0x0b,
	0xcd, 0x85, 0xfb, 0x15, 0xf5, 0xfb, 0x5e, 0xd4, 0x1e, 0xd1, 0xf8, 0xf4, 0xd8, 0xb1, 0xcb, 0x93,
	0x23, 0x7a, 0xdb, 0xd6, 0x22, 0x53, 0xb6, 0x68, 0xd7, 0x7e, 0x6b, 0x97, 0x69, 0x72, 0x07, 0xcd,
	0xe2, 0xce, 0xb4, 0x8e, 0xcd, 0xe0, 0xbc, 0xf9, 0xb4, 0x23, 0x92, 0x3d, 0x4b, 0x02, 0x68, 0xca,
	0xb9, 0x15, 0x5a, 0x18, 0x4b, 0x1b, 0x78, 0xad, 0xbd, 0x26, 0x04, 0x7c, 0xae, 0x8c, 0xa5, 0x4d,
	0xdc, 0x10, 0x7e, 0x93, 0x01, 0x74, 0xb8, 0x16, 0x78, 0xe7, 0x31, 0xb3, 0x82, 0xb6, 0xb0, 0x73,
	0xe4, 0x91, 0x1b, 0xe8, 0x15, 0x7a, 0x22, 0x33, 0x61, 0x2c, 0xcb, 0x72, 0x0a, 0x08, 0x9e, 0x07,
	0x24, 0x04, 0x58, 0xe4, 0x29, 0xb3, 0x02, 0xe7, 0xb5, 0x11, 0x2b, 0x39, 0xdb, 0xfd, 0x3b, 0x75,
	0x98, 0xd5, 0x71, 0xfb, 0x3f, 0xb1, 0x09, 0x85, 0x06, 0x8e, 0x57, 0x9a, 0xfe, 0x45, 0xa2, 0x90,
	0xe4, 0x0a, 0xea, 0xc6, 0x32, 0xbb, 0x30, 0xb4, 0x8b, 0xc1, 0x4e, 0x3d, 0x8c, 0x3e, 0xd7, 0xa1,
	0xb7, 0x5a, 0x87, 0xde, 0xf7, 0x3a, 0xf4, 0xde, 0x37, 0x61, 0x65, 0xb5, 0x09, 0x2b, 0x5f, 0x9b,
	0xb0, 0xf2, 0x4c, 0x4b, 0xcb, 0x1b, 0xbe, 0x0d, 0xf1, 0x51, 0xd9, 0x65, 0x2e, 0xcc, 0xb4, 0x8e,
	0x4f, 0xea, 0xf6, 0x27, 0x00, 0x00, 0xff, 0xff, 0x44, 0x45, 0xfc, 0x52, 0xad, 0x02, 0x00, 0x00,
}

func (m *DomainCooperation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DomainCooperation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DomainCooperation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintDomainCooperation(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintDomainCooperation(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.UpdateTimestamp) > 0 {
		i -= len(m.UpdateTimestamp)
		copy(dAtA[i:], m.UpdateTimestamp)
		i = encodeVarintDomainCooperation(dAtA, i, uint64(len(m.UpdateTimestamp)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.UpdateDate) > 0 {
		i -= len(m.UpdateDate)
		copy(dAtA[i:], m.UpdateDate)
		i = encodeVarintDomainCooperation(dAtA, i, uint64(len(m.UpdateDate)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.CreationTimestamp) > 0 {
		i -= len(m.CreationTimestamp)
		copy(dAtA[i:], m.CreationTimestamp)
		i = encodeVarintDomainCooperation(dAtA, i, uint64(len(m.CreationTimestamp)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.CreationDate) > 0 {
		i -= len(m.CreationDate)
		copy(dAtA[i:], m.CreationDate)
		i = encodeVarintDomainCooperation(dAtA, i, uint64(len(m.CreationDate)))
		i--
		dAtA[i] = 0x4a
	}
	if m.Cost != 0 {
		i = encodeVarintDomainCooperation(dAtA, i, uint64(m.Cost))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Interest) > 0 {
		i -= len(m.Interest)
		copy(dAtA[i:], m.Interest)
		i = encodeVarintDomainCooperation(dAtA, i, uint64(len(m.Interest)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Validity != nil {
		{
			size, err := m.Validity.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDomainCooperation(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.RemoteDomain != nil {
		{
			size, err := m.RemoteDomain.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDomainCooperation(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.SourceDomain != nil {
		{
			size, err := m.SourceDomain.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDomainCooperation(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.CooperationType) > 0 {
		i -= len(m.CooperationType)
		copy(dAtA[i:], m.CooperationType)
		i = encodeVarintDomainCooperation(dAtA, i, uint64(len(m.CooperationType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintDomainCooperation(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintDomainCooperation(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintDomainCooperation(dAtA []byte, offset int, v uint64) int {
	offset -= sovDomainCooperation(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DomainCooperation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovDomainCooperation(uint64(m.Id))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	l = len(m.CooperationType)
	if l > 0 {
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	if m.SourceDomain != nil {
		l = m.SourceDomain.Size()
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	if m.RemoteDomain != nil {
		l = m.RemoteDomain.Size()
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	if m.Validity != nil {
		l = m.Validity.Size()
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	l = len(m.Interest)
	if l > 0 {
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	if m.Cost != 0 {
		n += 1 + sovDomainCooperation(uint64(m.Cost))
	}
	l = len(m.CreationDate)
	if l > 0 {
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	l = len(m.CreationTimestamp)
	if l > 0 {
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	l = len(m.UpdateDate)
	if l > 0 {
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	l = len(m.UpdateTimestamp)
	if l > 0 {
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovDomainCooperation(uint64(l))
	}
	return n
}

func sovDomainCooperation(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDomainCooperation(x uint64) (n int) {
	return sovDomainCooperation(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DomainCooperation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDomainCooperation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DomainCooperation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DomainCooperation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CooperationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CooperationType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceDomain", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SourceDomain == nil {
				m.SourceDomain = &Domain{}
			}
			if err := m.SourceDomain.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoteDomain", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RemoteDomain == nil {
				m.RemoteDomain = &Domain{}
			}
			if err := m.RemoteDomain.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Validity", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Validity == nil {
				m.Validity = &Validity{}
			}
			if err := m.Validity.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interest", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Interest = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cost", wireType)
			}
			m.Cost = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cost |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreationDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreationTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDomainCooperation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDomainCooperation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDomainCooperation(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDomainCooperation
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDomainCooperation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDomainCooperation
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDomainCooperation
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDomainCooperation
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDomainCooperation        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDomainCooperation          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDomainCooperation = fmt.Errorf("proto: unexpected end of group")
)
