// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cdac/cooperation_network.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CooperationNetwork struct {
	Id                  uint64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Label               string                      `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	DomainMapList       []*DomainMap                `protobuf:"bytes,3,rep,name=domainMapList,proto3" json:"domainMapList,omitempty"`
	CooperationDataList []*CooperationData          `protobuf:"bytes,4,rep,name=cooperationDataList,proto3" json:"cooperationDataList,omitempty"`
	Features            *CooperationNetworkFeatures `protobuf:"bytes,5,opt,name=features,proto3" json:"features,omitempty"`
	CreationTimestamp   string                      `protobuf:"bytes,6,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	UpdateTimestamp     string                      `protobuf:"bytes,7,opt,name=updateTimestamp,proto3" json:"updateTimestamp,omitempty"`
	Creator             string                      `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *CooperationNetwork) Reset()         { *m = CooperationNetwork{} }
func (m *CooperationNetwork) String() string { return proto.CompactTextString(m) }
func (*CooperationNetwork) ProtoMessage()    {}
func (*CooperationNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_33557242126d7831, []int{0}
}
func (m *CooperationNetwork) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CooperationNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CooperationNetwork.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CooperationNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CooperationNetwork.Merge(m, src)
}
func (m *CooperationNetwork) XXX_Size() int {
	return m.Size()
}
func (m *CooperationNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_CooperationNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_CooperationNetwork proto.InternalMessageInfo

func (m *CooperationNetwork) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CooperationNetwork) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *CooperationNetwork) GetDomainMapList() []*DomainMap {
	if m != nil {
		return m.DomainMapList
	}
	return nil
}

func (m *CooperationNetwork) GetCooperationDataList() []*CooperationData {
	if m != nil {
		return m.CooperationDataList
	}
	return nil
}

func (m *CooperationNetwork) GetFeatures() *CooperationNetworkFeatures {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *CooperationNetwork) GetCreationTimestamp() string {
	if m != nil {
		return m.CreationTimestamp
	}
	return ""
}

func (m *CooperationNetwork) GetUpdateTimestamp() string {
	if m != nil {
		return m.UpdateTimestamp
	}
	return ""
}

func (m *CooperationNetwork) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*CooperationNetwork)(nil), "crossdomain.cdac.CooperationNetwork")
}

func init() { proto.RegisterFile("cdac/cooperation_network.proto", fileDescriptor_33557242126d7831) }

var fileDescriptor_33557242126d7831 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xbb, 0x4e, 0x33, 0x31,
	0x10, 0x85, 0xe3, 0xdc, 0x7f, 0x47, 0x3f, 0x17, 0x03, 0x92, 0x95, 0x48, 0xd6, 0x42, 0xc3, 0x16,
	0xd1, 0x46, 0x0a, 0x4f, 0x00, 0x89, 0x10, 0x05, 0x50, 0x2c, 0x54, 0x34, 0xd1, 0x64, 0xd7, 0x48,
	0x16, 0xd9, 0xd8, 0xb2, 0x1d, 0x01, 0x2f, 0x81, 0x78, 0x2c, 0xca, 0x94, 0x94, 0x28, 0x79, 0x11,
	0x84, 0x9d, 0x90, 0x1b, 0x50, 0xce, 0xcc, 0x77, 0x8e, 0xe7, 0x78, 0x30, 0x4b, 0x52, 0x48, 0x5a,
	0x89, 0x94, 0x8a, 0x6b, 0xb0, 0x42, 0x0e, 0x7b, 0x43, 0x6e, 0x1f, 0xa5, 0x7e, 0x88, 0x94, 0x96,
	0x56, 0x92, 0x9d, 0x44, 0x4b, 0x63, 0x52, 0x99, 0x81, 0x18, 0x46, 0x5f, 0x6c, 0xfd, 0xc0, 0x29,
	0x7c, 0xa7, 0x97, 0x81, 0xf2, 0x60, 0xbd, 0xb1, 0x61, 0x94, 0x82, 0x85, 0xd9, 0xf0, 0xf8, 0xb7,
	0x57, 0x7a, 0xf7, 0x1c, 0xec, 0x48, 0x73, 0xe3, 0xc1, 0xa3, 0x97, 0x02, 0x26, 0x9d, 0x05, 0x76,
	0xed, 0x29, 0xb2, 0x85, 0xf3, 0x22, 0xa5, 0x28, 0x40, 0x61, 0x31, 0xce, 0x8b, 0x94, 0xec, 0xe3,
	0xd2, 0x00, 0xfa, 0x7c, 0x40, 0xf3, 0x01, 0x0a, 0xff, 0xc5, 0xbe, 0x20, 0xa7, 0xf8, 0xbf, 0x5f,
	0xeb, 0x0a, 0xd4, 0xa5, 0x30, 0x96, 0x16, 0x82, 0x42, 0x58, 0x6b, 0x37, 0xa2, 0xf5, 0x0c, 0x51,
	0x77, 0x8e, 0xc5, 0xab, 0x0a, 0x72, 0x83, 0xf7, 0x96, 0xb6, 0xec, 0x82, 0x05, 0x67, 0x54, 0x74,
	0x46, 0x87, 0x9b, 0x46, 0x9d, 0x55, 0x38, 0xfe, 0x49, 0x4d, 0x2e, 0x70, 0x75, 0x1e, 0x93, 0x96,
	0x02, 0x14, 0xd6, 0xda, 0xcd, 0x3f, 0x9d, 0x66, 0xa9, 0xcf, 0x67, 0x9a, 0xf8, 0x5b, 0x4d, 0x9a,
	0x78, 0x37, 0xd1, 0xdc, 0x41, 0xb7, 0x22, 0xe3, 0xc6, 0x42, 0xa6, 0x68, 0xd9, 0xfd, 0xc1, 0xe6,
	0x80, 0x84, 0x78, 0x7b, 0xa4, 0x52, 0xb0, 0x7c, 0xc1, 0x56, 0x1c, 0xbb, 0xde, 0x26, 0x14, 0x57,
	0x9c, 0x5c, 0x6a, 0x5a, 0x75, 0xc4, 0xbc, 0x3c, 0x6b, 0xbf, 0x4d, 0x18, 0x1a, 0x4f, 0x18, 0xfa,
	0x98, 0x30, 0xf4, 0x3a, 0x65, 0xb9, 0xf1, 0x94, 0xe5, 0xde, 0xa7, 0x2c, 0x77, 0x47, 0x97, 0x22,
	0xb4, 0x9e, 0x5a, 0xee, 0xc2, 0xf6, 0x59, 0x71, 0xd3, 0x2f, 0xbb, 0x5b, 0x9e, 0x7c, 0x06, 0x00,
	0x00, 0xff, 0xff, 0x4f, 0x3d, 0xdc, 0x30, 0x5c, 0x02, 0x00, 0x00,
}

func (m *CooperationNetwork) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CooperationNetwork) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CooperationNetwork) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintCooperationNetwork(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.UpdateTimestamp) > 0 {
		i -= len(m.UpdateTimestamp)
		copy(dAtA[i:], m.UpdateTimestamp)
		i = encodeVarintCooperationNetwork(dAtA, i, uint64(len(m.UpdateTimestamp)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CreationTimestamp) > 0 {
		i -= len(m.CreationTimestamp)
		copy(dAtA[i:], m.CreationTimestamp)
		i = encodeVarintCooperationNetwork(dAtA, i, uint64(len(m.CreationTimestamp)))
		i--
		dAtA[i] = 0x32
	}
	if m.Features != nil {
		{
			size, err := m.Features.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCooperationNetwork(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CooperationDataList) > 0 {
		for iNdEx := len(m.CooperationDataList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.CooperationDataList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCooperationNetwork(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.DomainMapList) > 0 {
		for iNdEx := len(m.DomainMapList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DomainMapList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCooperationNetwork(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintCooperationNetwork(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintCooperationNetwork(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintCooperationNetwork(dAtA []byte, offset int, v uint64) int {
	offset -= sovCooperationNetwork(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CooperationNetwork) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCooperationNetwork(uint64(m.Id))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovCooperationNetwork(uint64(l))
	}
	if len(m.DomainMapList) > 0 {
		for _, e := range m.DomainMapList {
			l = e.Size()
			n += 1 + l + sovCooperationNetwork(uint64(l))
		}
	}
	if len(m.CooperationDataList) > 0 {
		for _, e := range m.CooperationDataList {
			l = e.Size()
			n += 1 + l + sovCooperationNetwork(uint64(l))
		}
	}
	if m.Features != nil {
		l = m.Features.Size()
		n += 1 + l + sovCooperationNetwork(uint64(l))
	}
	l = len(m.CreationTimestamp)
	if l > 0 {
		n += 1 + l + sovCooperationNetwork(uint64(l))
	}
	l = len(m.UpdateTimestamp)
	if l > 0 {
		n += 1 + l + sovCooperationNetwork(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovCooperationNetwork(uint64(l))
	}
	return n
}

func sovCooperationNetwork(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCooperationNetwork(x uint64) (n int) {
	return sovCooperationNetwork(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CooperationNetwork) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCooperationNetwork
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CooperationNetwork: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CooperationNetwork: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationNetwork
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationNetwork
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DomainMapList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationNetwork
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DomainMapList = append(m.DomainMapList, &DomainMap{})
			if err := m.DomainMapList[len(m.DomainMapList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CooperationDataList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationNetwork
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CooperationDataList = append(m.CooperationDataList, &CooperationData{})
			if err := m.CooperationDataList[len(m.CooperationDataList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Features", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationNetwork
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Features == nil {
				m.Features = &CooperationNetworkFeatures{}
			}
			if err := m.Features.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationNetwork
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreationTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationNetwork
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationNetwork
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCooperationNetwork(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCooperationNetwork
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCooperationNetwork(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCooperationNetwork
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCooperationNetwork
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCooperationNetwork
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCooperationNetwork
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCooperationNetwork
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCooperationNetwork
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCooperationNetwork        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCooperationNetwork          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCooperationNetwork = fmt.Errorf("proto: unexpected end of group")
)
