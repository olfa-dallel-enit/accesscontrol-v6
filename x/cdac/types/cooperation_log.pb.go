// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cdac/cooperation_log.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CooperationLog struct {
	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Transaction string `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Timestamp   string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Details     string `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	Decision    string `protobuf:"bytes,5,opt,name=decision,proto3" json:"decision,omitempty"`
	Function    string `protobuf:"bytes,6,opt,name=function,proto3" json:"function,omitempty"`
	Creator     string `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *CooperationLog) Reset()         { *m = CooperationLog{} }
func (m *CooperationLog) String() string { return proto.CompactTextString(m) }
func (*CooperationLog) ProtoMessage()    {}
func (*CooperationLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_735a62d52c09e443, []int{0}
}
func (m *CooperationLog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CooperationLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CooperationLog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CooperationLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CooperationLog.Merge(m, src)
}
func (m *CooperationLog) XXX_Size() int {
	return m.Size()
}
func (m *CooperationLog) XXX_DiscardUnknown() {
	xxx_messageInfo_CooperationLog.DiscardUnknown(m)
}

var xxx_messageInfo_CooperationLog proto.InternalMessageInfo

func (m *CooperationLog) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CooperationLog) GetTransaction() string {
	if m != nil {
		return m.Transaction
	}
	return ""
}

func (m *CooperationLog) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *CooperationLog) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *CooperationLog) GetDecision() string {
	if m != nil {
		return m.Decision
	}
	return ""
}

func (m *CooperationLog) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *CooperationLog) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*CooperationLog)(nil), "crossdomain.cdac.CooperationLog")
}

func init() { proto.RegisterFile("cdac/cooperation_log.proto", fileDescriptor_735a62d52c09e443) }

var fileDescriptor_735a62d52c09e443 = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x14, 0x45, 0x27, 0x63, 0x6d, 0x6d, 0x84, 0x22, 0x59, 0x85, 0x22, 0x61, 0x70, 0xd5, 0x55, 0x07,
	0xf4, 0x0f, 0x74, 0xeb, 0xaa, 0x4b, 0x37, 0xf2, 0x4c, 0x62, 0x09, 0x74, 0xe6, 0x85, 0xe4, 0x09,
	0xfa, 0x17, 0x7e, 0x96, 0x0b, 0x17, 0x5d, 0xba, 0x94, 0x99, 0x1f, 0x91, 0x64, 0x6c, 0x3b, 0xcb,
	0xf3, 0xce, 0xe5, 0x86, 0x5c, 0xbe, 0xd4, 0x06, 0x74, 0xad, 0x11, 0xbd, 0x0d, 0x40, 0x0e, 0xdb,
	0xe7, 0x1d, 0x6e, 0xd7, 0x3e, 0x20, 0xa1, 0xb8, 0xd2, 0x01, 0x63, 0x34, 0xd8, 0x80, 0x6b, 0xd7,
	0x29, 0x77, 0xf3, 0xcd, 0xf8, 0xe2, 0xe1, 0x94, 0x7d, 0xc4, 0xad, 0x58, 0xf0, 0xd2, 0x19, 0xc9,
	0x2a, 0xb6, 0x9a, 0x6c, 0x4a, 0x67, 0x44, 0xc5, 0x2f, 0x29, 0x40, 0x1b, 0x41, 0xa7, 0x84, 0x2c,
	0x2b, 0xb6, 0x9a, 0x6f, 0xc6, 0x27, 0x71, 0xcd, 0xe7, 0xe4, 0x1a, 0x1b, 0x09, 0x1a, 0x2f, 0xcf,
	0xb2, 0x3f, 0x1d, 0x84, 0xe4, 0x33, 0x63, 0x09, 0xdc, 0x2e, 0xca, 0x49, 0x76, 0x07, 0x14, 0x4b,
	0x7e, 0x61, 0xac, 0x76, 0x31, 0xd5, 0x9e, 0x67, 0x75, 0xe4, 0xe4, 0x5e, 0xdf, 0xda, 0xe1, 0xc9,
	0xe9, 0xe0, 0x0e, 0x9c, 0x1a, 0x75, 0xb0, 0x40, 0x18, 0xe4, 0x6c, 0x68, 0xfc, 0xc7, 0xfb, 0xdb,
	0xaf, 0x4e, 0xb1, 0x7d, 0xa7, 0xd8, 0x6f, 0xa7, 0xd8, 0x67, 0xaf, 0x8a, 0x7d, 0xaf, 0x8a, 0x9f,
	0x5e, 0x15, 0x4f, 0x72, 0xf4, 0xf5, 0xfa, 0xbd, 0xce, 0x23, 0xd1, 0x87, 0xb7, 0xf1, 0x65, 0x9a,
	0xb7, 0xb9, 0xfb, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xee, 0x2c, 0x64, 0x61, 0x39, 0x01, 0x00, 0x00,
}

func (m *CooperationLog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CooperationLog) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CooperationLog) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintCooperationLog(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Function) > 0 {
		i -= len(m.Function)
		copy(dAtA[i:], m.Function)
		i = encodeVarintCooperationLog(dAtA, i, uint64(len(m.Function)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Decision) > 0 {
		i -= len(m.Decision)
		copy(dAtA[i:], m.Decision)
		i = encodeVarintCooperationLog(dAtA, i, uint64(len(m.Decision)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Details) > 0 {
		i -= len(m.Details)
		copy(dAtA[i:], m.Details)
		i = encodeVarintCooperationLog(dAtA, i, uint64(len(m.Details)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Timestamp) > 0 {
		i -= len(m.Timestamp)
		copy(dAtA[i:], m.Timestamp)
		i = encodeVarintCooperationLog(dAtA, i, uint64(len(m.Timestamp)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Transaction) > 0 {
		i -= len(m.Transaction)
		copy(dAtA[i:], m.Transaction)
		i = encodeVarintCooperationLog(dAtA, i, uint64(len(m.Transaction)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintCooperationLog(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintCooperationLog(dAtA []byte, offset int, v uint64) int {
	offset -= sovCooperationLog(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CooperationLog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCooperationLog(uint64(m.Id))
	}
	l = len(m.Transaction)
	if l > 0 {
		n += 1 + l + sovCooperationLog(uint64(l))
	}
	l = len(m.Timestamp)
	if l > 0 {
		n += 1 + l + sovCooperationLog(uint64(l))
	}
	l = len(m.Details)
	if l > 0 {
		n += 1 + l + sovCooperationLog(uint64(l))
	}
	l = len(m.Decision)
	if l > 0 {
		n += 1 + l + sovCooperationLog(uint64(l))
	}
	l = len(m.Function)
	if l > 0 {
		n += 1 + l + sovCooperationLog(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovCooperationLog(uint64(l))
	}
	return n
}

func sovCooperationLog(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCooperationLog(x uint64) (n int) {
	return sovCooperationLog(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CooperationLog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCooperationLog
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CooperationLog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CooperationLog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Transaction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCooperationLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Transaction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCooperationLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Details", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCooperationLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Details = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Decision", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCooperationLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Decision = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Function", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCooperationLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Function = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCooperationLog
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCooperationLog
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCooperationLog
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCooperationLog(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCooperationLog
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCooperationLog(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCooperationLog
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCooperationLog
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCooperationLog
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCooperationLog
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCooperationLog
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCooperationLog
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCooperationLog        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCooperationLog          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCooperationLog = fmt.Errorf("proto: unexpected end of group")
)
