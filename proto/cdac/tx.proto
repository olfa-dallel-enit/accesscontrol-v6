syntax = "proto3";
package crossdomain.cdac;

import "cdac/authentication_log.proto";
import "cdac/domain_cooperation.proto";
import "cdac/cooperation_log.proto";
import "cdac/forward_policy.proto";
import "cdac/cooperation_network.proto";
import "cdac/update_policy.proto";
import "cdac/delegation_path.proto";
import "cdac/path.proto";
// this line is used by starport scaffolding # proto/tx/import
import "cdac/cooperative_domain.proto";
import "cdac/cooperation_network_features.proto";
import "cdac/cooperation_data.proto";
import "cdac/domain_map.proto";
import "cdac/validity.proto";
import "cdac/domain.proto";
import "cdac/ibc_connection.proto";
import "cdac/certificate.proto";
import "cdac/public_key.proto";

option go_package = "crossdomain/x/cdac/types";

// Msg defines the Msg service.
service Msg {
    rpc CreatePublicKey(MsgCreatePublicKey) returns (MsgCreatePublicKeyResponse);
  rpc UpdatePublicKey(MsgUpdatePublicKey) returns (MsgUpdatePublicKeyResponse);
  rpc DeletePublicKey(MsgDeletePublicKey) returns (MsgDeletePublicKeyResponse);
rpc CreateValidity(MsgCreateValidity) returns (MsgCreateValidityResponse);
  rpc UpdateValidity(MsgUpdateValidity) returns (MsgUpdateValidityResponse);
  rpc DeleteValidity(MsgDeleteValidity) returns (MsgDeleteValidityResponse);
rpc CreateCertificate(MsgCreateCertificate) returns (MsgCreateCertificateResponse);
  rpc UpdateCertificate(MsgUpdateCertificate) returns (MsgUpdateCertificateResponse);
  rpc DeleteCertificate(MsgDeleteCertificate) returns (MsgDeleteCertificateResponse);
rpc CreateIbcConnection(MsgCreateIbcConnection) returns (MsgCreateIbcConnectionResponse);
  rpc UpdateIbcConnection(MsgUpdateIbcConnection) returns (MsgUpdateIbcConnectionResponse);
  rpc DeleteIbcConnection(MsgDeleteIbcConnection) returns (MsgDeleteIbcConnectionResponse);
rpc CreateDomain(MsgCreateDomain) returns (MsgCreateDomainResponse);
  rpc UpdateDomain(MsgUpdateDomain) returns (MsgUpdateDomainResponse);
  rpc DeleteDomain(MsgDeleteDomain) returns (MsgDeleteDomainResponse);
rpc CreateAuthenticationLog(MsgCreateAuthenticationLog) returns (MsgCreateAuthenticationLogResponse);
  rpc UpdateAuthenticationLog(MsgUpdateAuthenticationLog) returns (MsgUpdateAuthenticationLogResponse);
  rpc DeleteAuthenticationLog(MsgDeleteAuthenticationLog) returns (MsgDeleteAuthenticationLogResponse);
  rpc SendAuthenticateDomain(MsgSendAuthenticateDomain) returns (MsgSendAuthenticateDomainResponse);
rpc CreateDomainCooperation(MsgCreateDomainCooperation) returns (MsgCreateDomainCooperationResponse);
  rpc UpdateDomainCooperation(MsgUpdateDomainCooperation) returns (MsgUpdateDomainCooperationResponse);
  rpc DeleteDomainCooperation(MsgDeleteDomainCooperation) returns (MsgDeleteDomainCooperationResponse);
rpc CreateCooperationLog(MsgCreateCooperationLog) returns (MsgCreateCooperationLogResponse);
  rpc UpdateCooperationLog(MsgUpdateCooperationLog) returns (MsgUpdateCooperationLogResponse);
  rpc DeleteCooperationLog(MsgDeleteCooperationLog) returns (MsgDeleteCooperationLogResponse);
  rpc SendEstablishCooperation(MsgSendEstablishCooperation) returns (MsgSendEstablishCooperationResponse);
  rpc SendForwardCooperationData(MsgSendForwardCooperationData) returns (MsgSendForwardCooperationDataResponse);
rpc CreateForwardPolicy(MsgCreateForwardPolicy) returns (MsgCreateForwardPolicyResponse);
  rpc UpdateForwardPolicy(MsgUpdateForwardPolicy) returns (MsgUpdateForwardPolicyResponse);
  rpc DeleteForwardPolicy(MsgDeleteForwardPolicy) returns (MsgDeleteForwardPolicyResponse);
  rpc SendExchangeCooperationData(MsgSendExchangeCooperationData) returns (MsgSendExchangeCooperationDataResponse);
  rpc SendModifyCooperationCost(MsgSendModifyCooperationCost) returns (MsgSendModifyCooperationCostResponse);
  rpc SendDisableCooperation(MsgSendDisableCooperation) returns (MsgSendDisableCooperationResponse);
  rpc SendEnableCooperation(MsgSendEnableCooperation) returns (MsgSendEnableCooperationResponse);
  rpc SendModifyCooperationValidity(MsgSendModifyCooperationValidity) returns (MsgSendModifyCooperationValidityResponse);
  rpc SendModifyCooperationInterest(MsgSendModifyCooperationInterest) returns (MsgSendModifyCooperationInterestResponse);
  rpc SendRevokeCooperation(MsgSendRevokeCooperation) returns (MsgSendRevokeCooperationResponse);
  rpc CreateDomainMap(MsgCreateDomainMap) returns (MsgCreateDomainMapResponse);
  rpc UpdateDomainMap(MsgUpdateDomainMap) returns (MsgUpdateDomainMapResponse);
  rpc DeleteDomainMap(MsgDeleteDomainMap) returns (MsgDeleteDomainMapResponse);
rpc CreateCooperationNetworkFeatures(MsgCreateCooperationNetworkFeatures) returns (MsgCreateCooperationNetworkFeaturesResponse);
  rpc UpdateCooperationNetworkFeatures(MsgUpdateCooperationNetworkFeatures) returns (MsgUpdateCooperationNetworkFeaturesResponse);
  rpc DeleteCooperationNetworkFeatures(MsgDeleteCooperationNetworkFeatures) returns (MsgDeleteCooperationNetworkFeaturesResponse);
  rpc CreateCooperationData(MsgCreateCooperationData) returns (MsgCreateCooperationDataResponse);
  rpc UpdateCooperationData(MsgUpdateCooperationData) returns (MsgUpdateCooperationDataResponse);
  rpc DeleteCooperationData(MsgDeleteCooperationData) returns (MsgDeleteCooperationDataResponse);
rpc CreateCooperationNetwork(MsgCreateCooperationNetwork) returns (MsgCreateCooperationNetworkResponse);
  rpc UpdateCooperationNetwork(MsgUpdateCooperationNetwork) returns (MsgUpdateCooperationNetworkResponse);
  rpc DeleteCooperationNetwork(MsgDeleteCooperationNetwork) returns (MsgDeleteCooperationNetworkResponse);
  rpc GenerateCooperationNetwork(MsgGenerateCooperationNetwork) returns (MsgGenerateCooperationNetworkResponse);
  rpc CreateUpdatePolicy(MsgCreateUpdatePolicy) returns (MsgCreateUpdatePolicyResponse);
  rpc UpdateUpdatePolicy(MsgUpdateUpdatePolicy) returns (MsgUpdateUpdatePolicyResponse);
  rpc DeleteUpdatePolicy(MsgDeleteUpdatePolicy) returns (MsgDeleteUpdatePolicyResponse);
rpc CreateCooperativeDomain(MsgCreateCooperativeDomain) returns (MsgCreateCooperativeDomainResponse);
  rpc UpdateCooperativeDomain(MsgUpdateCooperativeDomain) returns (MsgUpdateCooperativeDomainResponse);
  rpc DeleteCooperativeDomain(MsgDeleteCooperativeDomain) returns (MsgDeleteCooperativeDomainResponse);
rpc CreateDelegationPath(MsgCreateDelegationPath) returns (MsgCreateDelegationPathResponse);
  rpc UpdateDelegationPath(MsgUpdateDelegationPath) returns (MsgUpdateDelegationPathResponse);
  rpc DeleteDelegationPath(MsgDeleteDelegationPath) returns (MsgDeleteDelegationPathResponse);
rpc CreatePath(MsgCreatePath) returns (MsgCreatePathResponse);
  rpc UpdatePath(MsgUpdatePath) returns (MsgUpdatePathResponse);
  rpc DeletePath(MsgDeletePath) returns (MsgDeletePathResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreatePublicKey {
  string creator = 1;
  uint64 n = 2;
  uint64 e = 3;
}

message MsgCreatePublicKeyResponse {
  uint64 id = 1;
}

message MsgUpdatePublicKey {
  string creator = 1;
  uint64 id = 2;
  uint64 n = 3;
  uint64 e = 4;
}

message MsgUpdatePublicKeyResponse {}

message MsgDeletePublicKey {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeletePublicKeyResponse {}

message MsgCreateValidity {
  string creator = 1;
  string notBefore = 2;
  string notAfter = 3;
}

message MsgCreateValidityResponse {
  uint64 id = 1;
}

message MsgUpdateValidity {
  string creator = 1;
  uint64 id = 2;
  string notBefore = 3;
  string notAfter = 4;
}

message MsgUpdateValidityResponse {}

message MsgDeleteValidity {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteValidityResponse {}

message MsgCreateCertificate {
  string creator = 1;
  PublicKey publicKey = 2;
  Validity validity = 3;
}

message MsgCreateCertificateResponse {
  uint64 id = 1;
}

message MsgUpdateCertificate {
  string creator = 1;
  uint64 id = 2;
  PublicKey publicKey = 3;
  Validity validity = 4;
}

message MsgUpdateCertificateResponse {}

message MsgDeleteCertificate {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteCertificateResponse {}

message MsgCreateIbcConnection {
  string creator = 1;
  string channel = 2;
}

message MsgCreateIbcConnectionResponse {
  uint64 id = 1;
}

message MsgUpdateIbcConnection {
  string creator = 1;
  uint64 id = 2;
  string channel = 3;
}

message MsgUpdateIbcConnectionResponse {}

message MsgDeleteIbcConnection {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteIbcConnectionResponse {}

message MsgCreateDomain {
  string creator = 1;
  string name = 2;
  string domainType = 3;
  string location = 4;
  Certificate certificate = 5;
  IbcConnection ibcConnection = 6;
}

message MsgCreateDomainResponse {
  uint64 id = 1;
}

message MsgUpdateDomain {
  string creator = 1;
  uint64 id = 2;
  string name = 3;
  string domainType = 4;
  string location = 5;
  Certificate certificate = 6;
  IbcConnection ibcConnection = 7;
}

message MsgUpdateDomainResponse {}

message MsgDeleteDomain {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteDomainResponse {}

message MsgCreateAuthenticationLog {
  string creator = 1;
  string transaction = 2;
  string timestamp = 3;
  string details = 4;
  string decision = 5;
  string function = 6;
}

message MsgCreateAuthenticationLogResponse {
  uint64 id = 1;
}

message MsgUpdateAuthenticationLog {
  string creator = 1;
  uint64 id = 2;
  string transaction = 3;
  string timestamp = 4;
  string details = 5;
  string decision = 6;
  string function = 7;
}

message MsgUpdateAuthenticationLogResponse {}

message MsgDeleteAuthenticationLog {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteAuthenticationLogResponse {}

message MsgSendAuthenticateDomain {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendAuthenticateDomainResponse {
}

message MsgCreateDomainCooperation {
  string creator = 1;
  string label = 2;
  string cooperationType = 3;
  Domain sourceDomain = 4;
  Domain remoteDomain = 5;
  Validity validity = 6;
  string interest = 7;
  uint64 cost = 8;
  string creationDate = 9;
  string creationTimestamp = 10;
  string updateDate = 11;
  string updateTimestamp = 12;
  string status = 13;
}

message MsgCreateDomainCooperationResponse {
  uint64 id = 1;
}

message MsgUpdateDomainCooperation {
  string creator = 1;
  uint64 id = 2;
  string label = 3;
  string cooperationType = 4;
  Domain sourceDomain = 5;
  Domain remoteDomain = 6;
  Validity validity = 7;
  string interest = 8;
  uint64 cost = 9;
  string creationDate = 10;
  string creationTimestamp = 11;
  string updateDate = 12;
  string updateTimestamp = 13;
  string status = 14;
}

message MsgUpdateDomainCooperationResponse {}

message MsgDeleteDomainCooperation {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteDomainCooperationResponse {}

message MsgCreateCooperationLog {
  string creator = 1;
  string transaction = 2;
  string timestamp = 3;
  string details = 4;
  string decision = 5;
  string function = 6;
}

message MsgCreateCooperationLogResponse {
  uint64 id = 1;
}

message MsgUpdateCooperationLog {
  string creator = 1;
  uint64 id = 2;
  string transaction = 3;
  string timestamp = 4;
  string details = 5;
  string decision = 6;
  string function = 7;
}

message MsgUpdateCooperationLogResponse {}

message MsgDeleteCooperationLog {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteCooperationLogResponse {}

message MsgSendEstablishCooperation {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
  string notBefore = 5;
  string notAfter = 6;
  string interest = 7;
  string cost = 8;
}

message MsgSendEstablishCooperationResponse {
}
message MsgSendForwardCooperationData {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
  string notBefore = 5;
	string notAfter = 6;
  string interest = 7;
	string cost = 8;
	string domain1Name = 9;
	string domain2Name = 10;
	string domain1Location = 11;
	string domain2Location = 12;
}

message MsgSendForwardCooperationDataResponse {
}
message MsgCreateForwardPolicy {
  string creator = 1;
  string mode = 2;
  repeated string domainList = 3;
  repeated string locationList = 4;
}

message MsgCreateForwardPolicyResponse {
  uint64 id = 1;
}

message MsgUpdateForwardPolicy {
  string creator = 1;
  uint64 id = 2;
  string mode = 3;
  repeated string domainList = 4;
  repeated string locationList = 5;
}

message MsgUpdateForwardPolicyResponse {}

message MsgDeleteForwardPolicy {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteForwardPolicyResponse {}

message MsgSendExchangeCooperationData {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendExchangeCooperationDataResponse {
}
message MsgSendModifyCooperationCost {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
  string cost = 5;
}

message MsgSendModifyCooperationCostResponse {
}
message MsgSendDisableCooperation {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendDisableCooperationResponse {
}
message MsgSendEnableCooperation {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendEnableCooperationResponse {
}
message MsgSendModifyCooperationValidity {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
  string notBefore = 5;
  string notAfter = 6;
}

message MsgSendModifyCooperationValidityResponse {
}
message MsgSendModifyCooperationInterest {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
  string interest = 5;
}

message MsgSendModifyCooperationInterestResponse {
}
message MsgSendRevokeCooperation {
  string creator = 1;
  string port = 2;
  string channelID = 3;
  uint64 timeoutTimestamp = 4;
}

message MsgSendRevokeCooperationResponse {
}
message MsgCreateDomainMap {
  string creator = 1;
  string domainIndex = 2;

  repeated CooperativeDomain cooperativeDomainList = 3;
}
message MsgCreateDomainMapResponse {}

message MsgUpdateDomainMap {
  string creator = 1;
  string domainIndex = 2;

  repeated CooperativeDomain cooperativeDomainList = 3;
}
message MsgUpdateDomainMapResponse {}

message MsgDeleteDomainMap {
  string creator = 1;
  string domainIndex = 2;
}
message MsgDeleteDomainMapResponse {}

message MsgCreateCooperationNetworkFeatures {
  string creator = 1;
  uint64 depth = 2;
  uint64 cost = 3;
  repeated string interestList = 4;
  repeated string locationList = 5;
  string lastUpdate = 6;
}

message MsgCreateCooperationNetworkFeaturesResponse {
  uint64 id = 1;
}

message MsgUpdateCooperationNetworkFeatures {
  string creator = 1;
  uint64 id = 2;
  uint64 depth = 3;
  uint64 cost = 4;
  repeated string interestList = 5;
  repeated string locationList = 6;
  string lastUpdate = 7;
}

message MsgUpdateCooperationNetworkFeaturesResponse {}

message MsgDeleteCooperationNetworkFeatures {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteCooperationNetworkFeaturesResponse {}

message MsgCreateCooperationData {
  string creator = 1;
  string labelIndex = 2;

  Validity validity = 3;
  string status = 4;
  uint64 cost = 5;
  string lastUpdate = 6;
  string interest = 7;
}
message MsgCreateCooperationDataResponse {}

message MsgUpdateCooperationData {
  string creator = 1;
  string labelIndex = 2;

  Validity validity = 3;
  string status = 4;
  uint64 cost = 5;
  string lastUpdate = 6;
  string interest = 7;
}
message MsgUpdateCooperationDataResponse {}

message MsgDeleteCooperationData {
  string creator = 1;
  string labelIndex = 2;
}
message MsgDeleteCooperationDataResponse {}

message MsgCreateCooperationNetwork {
  string creator = 1;
  string label = 2;
  repeated DomainMap domainMapList = 3;
  repeated CooperationData cooperationDataList = 4;
  CooperationNetworkFeatures features = 5;
  string creationTimestamp = 6;
  string updateTimestamp = 7;
}

message MsgCreateCooperationNetworkResponse {
  uint64 id = 1;
}

message MsgUpdateCooperationNetwork {
  string creator = 1;
  uint64 id = 2;
  string label = 3;
  repeated DomainMap domainMapList = 4;
  repeated CooperationData cooperationDataList = 5;
  CooperationNetworkFeatures features = 6;
  string creationTimestamp = 7;
  string updateTimestamp = 8;
}

message MsgUpdateCooperationNetworkResponse {}

message MsgDeleteCooperationNetwork {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteCooperationNetworkResponse {}

message MsgGenerateCooperationNetwork {
  string creator = 1;
}

message MsgGenerateCooperationNetworkResponse {
}

message MsgCreateUpdatePolicy {
  string creator = 1;
  bool query = 3;
  bool event = 4;
  bool periodicalQuery = 5;
}
message MsgCreateUpdatePolicyResponse {}

message MsgUpdateUpdatePolicy {
  string creator = 1;
  bool query = 3;
  bool event = 4;
  bool periodicalQuery = 5;
}
message MsgUpdateUpdatePolicyResponse {}

message MsgDeleteUpdatePolicy {
  string creator = 1;
}
message MsgDeleteUpdatePolicyResponse {}
message MsgCreateCooperativeDomain {
  string creator = 1;
  string name = 2;
  string domainType = 3;
  string location = 4;
}

message MsgCreateCooperativeDomainResponse {
  uint64 id = 1;
}

message MsgUpdateCooperativeDomain {
  string creator = 1;
  uint64 id = 2;
  string name = 3;
  string domainType = 4;
  string location = 5;
}

message MsgUpdateCooperativeDomainResponse {}

message MsgDeleteCooperativeDomain {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteCooperativeDomainResponse {}

message MsgCreateDelegationPath {
  string creator = 1;
  CooperativeDomain delegator = 2;
  CooperativeDomain delegatee = 3;
}

message MsgCreateDelegationPathResponse {
  uint64 id = 1;
}

message MsgUpdateDelegationPath {
  string creator = 1;
  uint64 id = 2;
  CooperativeDomain delegator = 3;
  CooperativeDomain delegatee = 4;
  repeated Path pathList = 5; 
}

message MsgUpdateDelegationPathResponse {}

message MsgDeleteDelegationPath {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteDelegationPathResponse {}

message MsgCreatePath {
  string creator = 1;
  repeated CooperativeDomain domainList = 2;
}

message MsgCreatePathResponse {
  uint64 id = 1;
}

message MsgUpdatePath {
  string creator = 1;
  uint64 id = 2;
  repeated CooperativeDomain domainList = 3;
}

message MsgUpdatePathResponse {}

message MsgDeletePath {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeletePathResponse {}

// this line is used by starport scaffolding # proto/tx/message
