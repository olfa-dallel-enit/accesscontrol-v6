syntax = "proto3";
package crossdomain.cdac;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cdac/params.proto";
import "cdac/public_key.proto";
import "cdac/certificate.proto";
import "cdac/ibc_connection.proto";
import "cdac/authentication_log.proto";
import "cdac/cooperation_log.proto";
import "cdac/domain_map.proto";
import "cdac/cooperation_network_features.proto";
import "cdac/cooperation_data.proto";
import "cdac/cooperation_network.proto";
import "cdac/update_policy.proto";
import "cdac/cooperative_domain.proto";
import "cdac/delegation_path.proto";
import "cdac/path.proto";
import "cdac/time_calculation.proto";
import "cdac/calculation_time.proto";
import "cdac/inter_domain_acl_policy.proto";
import "cdac/inter_domain_dcl_policy.proto";
import "cdac/delegation_conditions.proto";
import "cdac/delegation_rule.proto";
import "cdac/delegation_policy_target.proto";
import "cdac/delegation_policy.proto";
import "cdac/delegation_log.proto";
// this line is used by starport scaffolding # 1
import "cdac/validity.proto";
import "cdac/domain.proto";
import "cdac/forward_policy.proto";
import "cdac/domain_cooperation.proto";

option go_package = "crossdomain/x/cdac/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/crossdomain/cdac/params";
  }
  // Queries a PublicKey by id.
	rpc PublicKey(QueryGetPublicKeyRequest) returns (QueryGetPublicKeyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/public_key/{id}";
	}

	// Queries a list of PublicKey items.
	rpc PublicKeyAll(QueryAllPublicKeyRequest) returns (QueryAllPublicKeyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/public_key";
	}

// Queries a Validity by id.
	rpc Validity(QueryGetValidityRequest) returns (QueryGetValidityResponse) {
		option (google.api.http).get = "/crossdomain/cdac/validity/{id}";
	}

	// Queries a list of Validity items.
	rpc ValidityAll(QueryAllValidityRequest) returns (QueryAllValidityResponse) {
		option (google.api.http).get = "/crossdomain/cdac/validity";
	}

// Queries a Certificate by id.
	rpc Certificate(QueryGetCertificateRequest) returns (QueryGetCertificateResponse) {
		option (google.api.http).get = "/crossdomain/cdac/certificate/{id}";
	}

	// Queries a list of Certificate items.
	rpc CertificateAll(QueryAllCertificateRequest) returns (QueryAllCertificateResponse) {
		option (google.api.http).get = "/crossdomain/cdac/certificate";
	}

// Queries a IbcConnection by id.
	rpc IbcConnection(QueryGetIbcConnectionRequest) returns (QueryGetIbcConnectionResponse) {
		option (google.api.http).get = "/crossdomain/cdac/ibc_connection/{id}";
	}

	// Queries a list of IbcConnection items.
	rpc IbcConnectionAll(QueryAllIbcConnectionRequest) returns (QueryAllIbcConnectionResponse) {
		option (google.api.http).get = "/crossdomain/cdac/ibc_connection";
	}

// Queries a Domain by id.
	rpc Domain(QueryGetDomainRequest) returns (QueryGetDomainResponse) {
		option (google.api.http).get = "/crossdomain/cdac/domain/{id}";
	}

	// Queries a list of Domain items.
	rpc DomainAll(QueryAllDomainRequest) returns (QueryAllDomainResponse) {
		option (google.api.http).get = "/crossdomain/cdac/domain";
	}

// Queries a AuthenticationLog by id.
	rpc AuthenticationLog(QueryGetAuthenticationLogRequest) returns (QueryGetAuthenticationLogResponse) {
		option (google.api.http).get = "/crossdomain/cdac/authentication_log/{id}";
	}

	// Queries a list of AuthenticationLog items.
	rpc AuthenticationLogAll(QueryAllAuthenticationLogRequest) returns (QueryAllAuthenticationLogResponse) {
		option (google.api.http).get = "/crossdomain/cdac/authentication_log";
	}

// Queries a DomainCooperation by id.
	rpc DomainCooperation(QueryGetDomainCooperationRequest) returns (QueryGetDomainCooperationResponse) {
		option (google.api.http).get = "/crossdomain/cdac/domain_cooperation/{id}";
	}

	// Queries a list of DomainCooperation items.
	rpc DomainCooperationAll(QueryAllDomainCooperationRequest) returns (QueryAllDomainCooperationResponse) {
		option (google.api.http).get = "/crossdomain/cdac/domain_cooperation";
	}

// Queries a CooperationLog by id.
	rpc CooperationLog(QueryGetCooperationLogRequest) returns (QueryGetCooperationLogResponse) {
		option (google.api.http).get = "/crossdomain/cdac/cooperation_log/{id}";
	}

	// Queries a list of CooperationLog items.
	rpc CooperationLogAll(QueryAllCooperationLogRequest) returns (QueryAllCooperationLogResponse) {
		option (google.api.http).get = "/crossdomain/cdac/cooperation_log";
	}

// Queries a list of CheckEstablishedCooperationByChannel items.
	rpc CheckEstablishedCooperationByChannel(QueryCheckEstablishedCooperationByChannelRequest) returns (QueryCheckEstablishedCooperationByChannelResponse) {
		option (google.api.http).get = "/crossdomain/cdac/check_established_cooperation_by_channel/{channel}";
	}

// Queries a list of EstablishedCooperationByChannel items.
	rpc EstablishedCooperationByChannel(QueryEstablishedCooperationByChannelRequest) returns (QueryEstablishedCooperationByChannelResponse) {
		option (google.api.http).get = "/crossdomain/cdac/established_cooperation_by_channel/{channel}";
	}

// Queries a ForwardPolicy by id.
	rpc ForwardPolicy(QueryGetForwardPolicyRequest) returns (QueryGetForwardPolicyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/forward_policy/{id}";
	}

	// Queries a list of ForwardPolicy items.
	rpc ForwardPolicyAll(QueryAllForwardPolicyRequest) returns (QueryAllForwardPolicyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/forward_policy";
	}

// Queries a list of RetrieveForwardPolicy items.
	rpc RetrieveForwardPolicy(QueryRetrieveForwardPolicyRequest) returns (QueryRetrieveForwardPolicyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/retrieve_forward_policy";
	}

// Queries a DomainMap by index.
	rpc DomainMap(QueryGetDomainMapRequest) returns (QueryGetDomainMapResponse) {
		option (google.api.http).get = "/crossdomain/cdac/domain_map/{domainIndex}";
	}

	// Queries a list of DomainMap items.
	rpc DomainMapAll(QueryAllDomainMapRequest) returns (QueryAllDomainMapResponse) {
		option (google.api.http).get = "/crossdomain/cdac/domain_map";
	}

// Queries a CooperationNetworkFeatures by id.
	rpc CooperationNetworkFeatures(QueryGetCooperationNetworkFeaturesRequest) returns (QueryGetCooperationNetworkFeaturesResponse) {
		option (google.api.http).get = "/crossdomain/cdac/cooperation_network_features/{id}";
	}

	// Queries a list of CooperationNetworkFeatures items.
	rpc CooperationNetworkFeaturesAll(QueryAllCooperationNetworkFeaturesRequest) returns (QueryAllCooperationNetworkFeaturesResponse) {
		option (google.api.http).get = "/crossdomain/cdac/cooperation_network_features";
	}

// Queries a CooperationData by index.
	rpc CooperationData(QueryGetCooperationDataRequest) returns (QueryGetCooperationDataResponse) {
		option (google.api.http).get = "/crossdomain/cdac/cooperation_data/{labelIndex}";
	}

	// Queries a list of CooperationData items.
	rpc CooperationDataAll(QueryAllCooperationDataRequest) returns (QueryAllCooperationDataResponse) {
		option (google.api.http).get = "/crossdomain/cdac/cooperation_data";
	}

// Queries a CooperationNetwork by id.
	rpc CooperationNetwork(QueryGetCooperationNetworkRequest) returns (QueryGetCooperationNetworkResponse) {
		option (google.api.http).get = "/crossdomain/cdac/cooperation_network/{id}";
	}

	// Queries a list of CooperationNetwork items.
	rpc CooperationNetworkAll(QueryAllCooperationNetworkRequest) returns (QueryAllCooperationNetworkResponse) {
		option (google.api.http).get = "/crossdomain/cdac/cooperation_network";
	}

// Queries a UpdatePolicy by index.
	rpc UpdatePolicy(QueryGetUpdatePolicyRequest) returns (QueryGetUpdatePolicyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/update_policy";
	}
// Queries a CooperativeDomain by id.
	rpc CooperativeDomain(QueryGetCooperativeDomainRequest) returns (QueryGetCooperativeDomainResponse) {
		option (google.api.http).get = "/crossdomain/cdac/cooperative_domain/{id}";
	}

	// Queries a list of CooperativeDomain items.
	rpc CooperativeDomainAll(QueryAllCooperativeDomainRequest) returns (QueryAllCooperativeDomainResponse) {
		option (google.api.http).get = "/crossdomain/cdac/cooperative_domain";
	}

// Queries a DelegationPath by id.
	rpc DelegationPath(QueryGetDelegationPathRequest) returns (QueryGetDelegationPathResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_path/{id}";
	}

	// Queries a list of DelegationPath items.
	rpc DelegationPathAll(QueryAllDelegationPathRequest) returns (QueryAllDelegationPathResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_path";
	}

// Queries a Path by id.
	rpc Path(QueryGetPathRequest) returns (QueryGetPathResponse) {
		option (google.api.http).get = "/crossdomain/cdac/path/{id}";
	}

	// Queries a list of Path items.
	rpc PathAll(QueryAllPathRequest) returns (QueryAllPathResponse) {
		option (google.api.http).get = "/crossdomain/cdac/path";
	}

// Queries a TimeCalculation by id.
	rpc TimeCalculation(QueryGetTimeCalculationRequest) returns (QueryGetTimeCalculationResponse) {
		option (google.api.http).get = "/crossdomain/cdac/time_calculation/{id}";
	}

	// Queries a list of TimeCalculation items.
	rpc TimeCalculationAll(QueryAllTimeCalculationRequest) returns (QueryAllTimeCalculationResponse) {
		option (google.api.http).get = "/crossdomain/cdac/time_calculation";
	}

// Queries a CalculationTime by id.
	rpc CalculationTime(QueryGetCalculationTimeRequest) returns (QueryGetCalculationTimeResponse) {
		option (google.api.http).get = "/crossdomain/cdac/calculation_time/{id}";
	}

	// Queries a list of CalculationTime items.
	rpc CalculationTimeAll(QueryAllCalculationTimeRequest) returns (QueryAllCalculationTimeResponse) {
		option (google.api.http).get = "/crossdomain/cdac/calculation_time";
	}

// Queries a list of RequestAccess items.
	rpc RequestAccess(QueryRequestAccessRequest) returns (QueryRequestAccessResponse) {
		option (google.api.http).get = "/crossdomain/cdac/request_access/{object}/{action}";
	}

// Queries a InterDomainAclPolicy by id.
	rpc InterDomainAclPolicy(QueryGetInterDomainAclPolicyRequest) returns (QueryGetInterDomainAclPolicyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/inter_domain_acl_policy/{id}";
	}

	// Queries a list of InterDomainAclPolicy items.
	rpc InterDomainAclPolicyAll(QueryAllInterDomainAclPolicyRequest) returns (QueryAllInterDomainAclPolicyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/inter_domain_acl_policy";
	}

// Queries a InterDomainDclPolicy by id.
	rpc InterDomainDclPolicy(QueryGetInterDomainDclPolicyRequest) returns (QueryGetInterDomainDclPolicyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/inter_domain_dcl_policy/{id}";
	}

	// Queries a list of InterDomainDclPolicy items.
	rpc InterDomainDclPolicyAll(QueryAllInterDomainDclPolicyRequest) returns (QueryAllInterDomainDclPolicyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/inter_domain_dcl_policy";
	}

// Queries a DelegationConditions by id.
	rpc DelegationConditions(QueryGetDelegationConditionsRequest) returns (QueryGetDelegationConditionsResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_conditions/{id}";
	}

	// Queries a list of DelegationConditions items.
	rpc DelegationConditionsAll(QueryAllDelegationConditionsRequest) returns (QueryAllDelegationConditionsResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_conditions";
	}

// Queries a DelegationRule by id.
	rpc DelegationRule(QueryGetDelegationRuleRequest) returns (QueryGetDelegationRuleResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_rule/{id}";
	}

	// Queries a list of DelegationRule items.
	rpc DelegationRuleAll(QueryAllDelegationRuleRequest) returns (QueryAllDelegationRuleResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_rule";
	}

// Queries a DelegationPolicyTarget by id.
	rpc DelegationPolicyTarget(QueryGetDelegationPolicyTargetRequest) returns (QueryGetDelegationPolicyTargetResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_policy_target/{id}";
	}

	// Queries a list of DelegationPolicyTarget items.
	rpc DelegationPolicyTargetAll(QueryAllDelegationPolicyTargetRequest) returns (QueryAllDelegationPolicyTargetResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_policy_target";
	}

// Queries a DelegationPolicy by id.
	rpc DelegationPolicy(QueryGetDelegationPolicyRequest) returns (QueryGetDelegationPolicyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_policy/{id}";
	}

	// Queries a list of DelegationPolicy items.
	rpc DelegationPolicyAll(QueryAllDelegationPolicyRequest) returns (QueryAllDelegationPolicyResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_policy";
	}

// Queries a DelegationLog by id.
	rpc DelegationLog(QueryGetDelegationLogRequest) returns (QueryGetDelegationLogResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_log/{id}";
	}

	// Queries a list of DelegationLog items.
	rpc DelegationLogAll(QueryAllDelegationLogRequest) returns (QueryAllDelegationLogResponse) {
		option (google.api.http).get = "/crossdomain/cdac/delegation_log";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetPublicKeyRequest {
	uint64 id = 1;
}

message QueryGetPublicKeyResponse {
	PublicKey PublicKey = 1 [(gogoproto.nullable) = false];
}

message QueryAllPublicKeyRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPublicKeyResponse {
	repeated PublicKey PublicKey = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetValidityRequest {
	uint64 id = 1;
}

message QueryGetValidityResponse {
	Validity Validity = 1 [(gogoproto.nullable) = false];
}

message QueryAllValidityRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllValidityResponse {
	repeated Validity Validity = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetCertificateRequest {
	uint64 id = 1;
}

message QueryGetCertificateResponse {
	Certificate Certificate = 1 [(gogoproto.nullable) = false];
}

message QueryAllCertificateRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCertificateResponse {
	repeated Certificate Certificate = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetIbcConnectionRequest {
	uint64 id = 1;
}

message QueryGetIbcConnectionResponse {
	IbcConnection IbcConnection = 1 [(gogoproto.nullable) = false];
}

message QueryAllIbcConnectionRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllIbcConnectionResponse {
	repeated IbcConnection IbcConnection = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDomainRequest {
	uint64 id = 1;
}

message QueryGetDomainResponse {
	Domain Domain = 1 [(gogoproto.nullable) = false];
}

message QueryAllDomainRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDomainResponse {
	repeated Domain Domain = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetAuthenticationLogRequest {
	uint64 id = 1;
}

message QueryGetAuthenticationLogResponse {
	AuthenticationLog AuthenticationLog = 1 [(gogoproto.nullable) = false];
}

message QueryAllAuthenticationLogRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAuthenticationLogResponse {
	repeated AuthenticationLog AuthenticationLog = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDomainCooperationRequest {
	uint64 id = 1;
}

message QueryGetDomainCooperationResponse {
	DomainCooperation DomainCooperation = 1 [(gogoproto.nullable) = false];
}

message QueryAllDomainCooperationRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDomainCooperationResponse {
	repeated DomainCooperation DomainCooperation = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetCooperationLogRequest {
	uint64 id = 1;
}

message QueryGetCooperationLogResponse {
	CooperationLog CooperationLog = 1 [(gogoproto.nullable) = false];
}

message QueryAllCooperationLogRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCooperationLogResponse {
	repeated CooperationLog CooperationLog = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryCheckEstablishedCooperationByChannelRequest {
  string channel = 1;
}

message QueryCheckEstablishedCooperationByChannelResponse {
  string label = 1;
  bool found = 2;
}

message QueryEstablishedCooperationByChannelRequest {
  string channel = 1;
}

message QueryEstablishedCooperationByChannelResponse {
  DomainCooperation domainCooperation = 1;
  bool found = 2;
}

message QueryGetForwardPolicyRequest {
	uint64 id = 1;
}

message QueryGetForwardPolicyResponse {
	ForwardPolicy ForwardPolicy = 1 [(gogoproto.nullable) = false];
}

message QueryAllForwardPolicyRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllForwardPolicyResponse {
	repeated ForwardPolicy ForwardPolicy = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryRetrieveForwardPolicyRequest {
}

message QueryRetrieveForwardPolicyResponse {
  ForwardPolicy forwardPolicy = 1;
}

message QueryGetDomainMapRequest {
	  string domainIndex = 1;

}

message QueryGetDomainMapResponse {
	DomainMap domainMap = 1 [(gogoproto.nullable) = false];
}

message QueryAllDomainMapRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDomainMapResponse {
	repeated DomainMap domainMap = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetCooperationNetworkFeaturesRequest {
	uint64 id = 1;
}

message QueryGetCooperationNetworkFeaturesResponse {
	CooperationNetworkFeatures CooperationNetworkFeatures = 1 [(gogoproto.nullable) = false];
}

message QueryAllCooperationNetworkFeaturesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCooperationNetworkFeaturesResponse {
	repeated CooperationNetworkFeatures CooperationNetworkFeatures = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetCooperationDataRequest {
	  string labelIndex = 1;

}

message QueryGetCooperationDataResponse {
	CooperationData cooperationData = 1 [(gogoproto.nullable) = false];
}

message QueryAllCooperationDataRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCooperationDataResponse {
	repeated CooperationData cooperationData = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetCooperationNetworkRequest {
	uint64 id = 1;
}

message QueryGetCooperationNetworkResponse {
	CooperationNetwork CooperationNetwork = 1 [(gogoproto.nullable) = false];
}

message QueryAllCooperationNetworkRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCooperationNetworkResponse {
	repeated CooperationNetwork CooperationNetwork = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetUpdatePolicyRequest {}

message QueryGetUpdatePolicyResponse {
	UpdatePolicy UpdatePolicy = 1 [(gogoproto.nullable) = false];
}
message QueryGetCooperativeDomainRequest {
	uint64 id = 1;
}

message QueryGetCooperativeDomainResponse {
	CooperativeDomain CooperativeDomain = 1 [(gogoproto.nullable) = false];
}

message QueryAllCooperativeDomainRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCooperativeDomainResponse {
	repeated CooperativeDomain CooperativeDomain = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDelegationPathRequest {
	uint64 id = 1;
}

message QueryGetDelegationPathResponse {
	DelegationPath DelegationPath = 1 [(gogoproto.nullable) = false];
}

message QueryAllDelegationPathRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDelegationPathResponse {
	repeated DelegationPath DelegationPath = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPathRequest {
	uint64 id = 1;
}

message QueryGetPathResponse {
	Path Path = 1 [(gogoproto.nullable) = false];
}

message QueryAllPathRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPathResponse {
	repeated Path Path = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetTimeCalculationRequest {
	uint64 id = 1;
}

message QueryGetTimeCalculationResponse {
	TimeCalculation TimeCalculation = 1 [(gogoproto.nullable) = false];
}

message QueryAllTimeCalculationRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTimeCalculationResponse {
	repeated TimeCalculation TimeCalculation = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetCalculationTimeRequest {
	uint64 id = 1;
}

message QueryGetCalculationTimeResponse {
	CalculationTime CalculationTime = 1 [(gogoproto.nullable) = false];
}

message QueryAllCalculationTimeRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCalculationTimeResponse {
	repeated CalculationTime CalculationTime = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryRequestAccessRequest {
  string object = 1;
  string action = 2;
}

message QueryRequestAccessResponse {
  string decision = 1;
}

message QueryGetInterDomainAclPolicyRequest {
	uint64 id = 1;
}

message QueryGetInterDomainAclPolicyResponse {
	InterDomainAclPolicy InterDomainAclPolicy = 1 [(gogoproto.nullable) = false];
}

message QueryAllInterDomainAclPolicyRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllInterDomainAclPolicyResponse {
	repeated InterDomainAclPolicy InterDomainAclPolicy = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetInterDomainDclPolicyRequest {
	uint64 id = 1;
}

message QueryGetInterDomainDclPolicyResponse {
	InterDomainDclPolicy InterDomainDclPolicy = 1 [(gogoproto.nullable) = false];
}

message QueryAllInterDomainDclPolicyRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllInterDomainDclPolicyResponse {
	repeated InterDomainDclPolicy InterDomainDclPolicy = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDelegationConditionsRequest {
	uint64 id = 1;
}

message QueryGetDelegationConditionsResponse {
	DelegationConditions DelegationConditions = 1 [(gogoproto.nullable) = false];
}

message QueryAllDelegationConditionsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDelegationConditionsResponse {
	repeated DelegationConditions DelegationConditions = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDelegationRuleRequest {
	uint64 id = 1;
}

message QueryGetDelegationRuleResponse {
	DelegationRule DelegationRule = 1 [(gogoproto.nullable) = false];
}

message QueryAllDelegationRuleRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDelegationRuleResponse {
	repeated DelegationRule DelegationRule = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDelegationPolicyTargetRequest {
	uint64 id = 1;
}

message QueryGetDelegationPolicyTargetResponse {
	DelegationPolicyTarget DelegationPolicyTarget = 1 [(gogoproto.nullable) = false];
}

message QueryAllDelegationPolicyTargetRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDelegationPolicyTargetResponse {
	repeated DelegationPolicyTarget DelegationPolicyTarget = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDelegationPolicyRequest {
	uint64 id = 1;
}

message QueryGetDelegationPolicyResponse {
	DelegationPolicy DelegationPolicy = 1 [(gogoproto.nullable) = false];
}

message QueryAllDelegationPolicyRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDelegationPolicyResponse {
	repeated DelegationPolicy DelegationPolicy = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDelegationLogRequest {
	uint64 id = 1;
}

message QueryGetDelegationLogResponse {
	DelegationLog DelegationLog = 1 [(gogoproto.nullable) = false];
}

message QueryAllDelegationLogRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDelegationLogResponse {
	repeated DelegationLog DelegationLog = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
